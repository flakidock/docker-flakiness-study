#0 building with "default" instance using docker driver

#1 [internal] load build definition from v1_Dockerfile
#1 transferring dockerfile:
#1 transferring dockerfile: 1.12kB done
#1 DONE 0.4s

#2 [internal] load .dockerignore
#2 transferring context: 2B done
#2 DONE 0.5s

#3 [internal] load metadata for docker.io/library/golang:latest
#3 DONE 1.2s

#4 [internal] load build context
#4 DONE 0.0s

#5 [builder 1/4] FROM docker.io/library/golang:latest@sha256:86a3c48a61915a8c62c0e1d7594730399caa3feb73655dfe96c7bc17710e96cf
#5 resolve docker.io/library/golang:latest@sha256:86a3c48a61915a8c62c0e1d7594730399caa3feb73655dfe96c7bc17710e96cf 0.1s done
#5 sha256:86a3c48a61915a8c62c0e1d7594730399caa3feb73655dfe96c7bc17710e96cf 9.74kB / 9.74kB done
#5 sha256:a61b645b609b758e4c0a9c57efbba8ccc610abb4d96544cedd8411aa1c9e4b09 2.82kB / 2.82kB done
#5 sha256:a07daa84ec6c320c62f1fddb40b84698de004aac1c5ceb28243d674952d536f3 2.32kB / 2.32kB done
#5 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 0B / 92.23MB 0.3s
#5 ...

#4 [internal] load build context
#4 transferring context: 8.00MB 0.1s done
#4 DONE 0.5s

#5 [builder 1/4] FROM docker.io/library/golang:latest@sha256:86a3c48a61915a8c62c0e1d7594730399caa3feb73655dfe96c7bc17710e96cf
#5 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 6.29MB / 92.23MB 0.5s
#5 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 0B / 69.35MB 0.5s
#5 sha256:ddb1467b736f6b84ad01493f98b050ed46efd37c54e4307fffc56ed028fdeab6 0B / 126B 0.5s
#5 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 17.83MB / 92.23MB 0.7s
#5 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 6.29MB / 69.35MB 0.7s
#5 sha256:ddb1467b736f6b84ad01493f98b050ed46efd37c54e4307fffc56ed028fdeab6 126B / 126B 0.6s done
#5 sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1 0B / 32B 0.7s
#5 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 11.53MB / 69.35MB 0.8s
#5 sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1 32B / 32B 0.8s
#5 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 25.17MB / 92.23MB 1.0s
#5 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 22.02MB / 69.35MB 1.0s
#5 sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1 32B / 32B 0.9s done
#5 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 29.36MB / 69.35MB 1.1s
#5 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 31.46MB / 92.23MB 1.4s
#5 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 40.89MB / 69.35MB 1.4s
#5 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 47.19MB / 69.35MB 1.5s
#5 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 38.80MB / 92.23MB 1.7s
#5 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 57.67MB / 69.35MB 1.7s
#5 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 45.09MB / 92.23MB 1.9s
#5 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 67.11MB / 69.35MB 1.9s
#5 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 50.33MB / 92.23MB 2.1s
#5 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 56.62MB / 92.23MB 2.4s
#5 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 65.01MB / 92.23MB 2.8s
#5 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 74.45MB / 92.23MB 3.0s
#5 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 69.35MB / 69.35MB 3.0s done
#5 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 82.84MB / 92.23MB 3.3s
#5 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 92.23MB / 92.23MB 3.6s
#5 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 92.23MB / 92.23MB 5.1s done
#5 extracting sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca
#5 extracting sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 5.0s
#5 extracting sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 5.2s done
#5 extracting sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f
#5 extracting sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 5.1s
#5 extracting sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 5.6s done
#5 extracting sha256:ddb1467b736f6b84ad01493f98b050ed46efd37c54e4307fffc56ed028fdeab6
#5 extracting sha256:ddb1467b736f6b84ad01493f98b050ed46efd37c54e4307fffc56ed028fdeab6 done
#5 extracting sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1
#5 extracting sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1 done
#5 DONE 18.4s

#6 [builder 2/4] WORKDIR /go/src/github.com/PierreZ/goStatic
#6 DONE 10.4s

#7 [builder 3/4] COPY . .
#7 DONE 1.6s

#8 [builder 4/4] RUN mkdir ./bin &&     apt-get update && apt-get install -y --no-install-recommends upx-ucl &&     rm -rf /var/lib/apt/lists/* &&     GOOS=$(echo linux/amd64 | cut -f1 -d/) &&     GOARCH=$(echo linux/amd64 | cut -f2 -d/) &&     GOARM=$(echo linux/amd64 | cut -f3 -d/ | sed "s/v//" ) &&     CGO_ENABLED=0 GOOS=${GOOS} GOARCH=${GOARCH} GOARM=${GOARM} go build ${BUILD_ARGS} -ldflags="-s" -tags netgo -installsuffix netgo -o ./bin/goStatic &&     mkdir ./bin/etc &&     ID=$(shuf -i 100-9999 -n 1) &&     upx -9 ./bin/goStatic &&     echo $ID &&     echo "appuser:x:$ID:$ID::/sbin/nologin:/bin/false" > ./bin/etc/passwd &&     echo "appgroup:x:$ID:appuser" > ./bin/etc/group
#8 0.624 Get:1 http://deb.debian.org/debian bookworm InRelease [151 kB]
#8 0.654 Get:2 http://deb.debian.org/debian bookworm-updates InRelease [55.4 kB]
#8 0.665 Get:3 http://deb.debian.org/debian-security bookworm-security InRelease [48.0 kB]
#8 0.747 Get:4 http://deb.debian.org/debian bookworm/main amd64 Packages [8788 kB]
#8 0.884 Get:5 http://deb.debian.org/debian bookworm-updates/main amd64 Packages [13.8 kB]
#8 0.895 Get:6 http://deb.debian.org/debian-security bookworm-security/main amd64 Packages [169 kB]
#8 2.190 Fetched 9225 kB in 2s (5805 kB/s)
#8 2.190 Reading package lists...
#8 2.882 Reading package lists...
#8 3.569 Building dependency tree...
#8 3.699 Reading state information...
#8 3.709 E: Unable to locate package upx-ucl
#8 ERROR: process "/bin/sh -c mkdir ./bin &&     apt-get update && apt-get install -y --no-install-recommends upx-ucl &&     rm -rf /var/lib/apt/lists/* &&     GOOS=$(echo $TARGETPLATFORM | cut -f1 -d/) &&     GOARCH=$(echo $TARGETPLATFORM | cut -f2 -d/) &&     GOARM=$(echo $TARGETPLATFORM | cut -f3 -d/ | sed \"s/v//\" ) &&     CGO_ENABLED=0 GOOS=${GOOS} GOARCH=${GOARCH} GOARM=${GOARM} go build ${BUILD_ARGS} -ldflags=\"-s\" -tags netgo -installsuffix netgo -o ./bin/goStatic &&     mkdir ./bin/etc &&     ID=$(shuf -i 100-9999 -n 1) &&     upx -9 ./bin/goStatic &&     echo $ID &&     echo \"appuser:x:$ID:$ID::/sbin/nologin:/bin/false\" > ./bin/etc/passwd &&     echo \"appgroup:x:$ID:appuser\" > ./bin/etc/group" did not complete successfully: exit code: 100
------
 > [builder 4/4] RUN mkdir ./bin &&     apt-get update && apt-get install -y --no-install-recommends upx-ucl &&     rm -rf /var/lib/apt/lists/* &&     GOOS=$(echo linux/amd64 | cut -f1 -d/) &&     GOARCH=$(echo linux/amd64 | cut -f2 -d/) &&     GOARM=$(echo linux/amd64 | cut -f3 -d/ | sed "s/v//" ) &&     CGO_ENABLED=0 GOOS=${GOOS} GOARCH=${GOARCH} GOARM=${GOARM} go build ${BUILD_ARGS} -ldflags="-s" -tags netgo -installsuffix netgo -o ./bin/goStatic &&     mkdir ./bin/etc &&     ID=$(shuf -i 100-9999 -n 1) &&     upx -9 ./bin/goStatic &&     echo $ID &&     echo "appuser:x:$ID:$ID::/sbin/nologin:/bin/false" > ./bin/etc/passwd &&     echo "appgroup:x:$ID:appuser" > ./bin/etc/group:
0.624 Get:1 http://deb.debian.org/debian bookworm InRelease [151 kB]
0.654 Get:2 http://deb.debian.org/debian bookworm-updates InRelease [55.4 kB]
0.665 Get:3 http://deb.debian.org/debian-security bookworm-security InRelease [48.0 kB]
0.747 Get:4 http://deb.debian.org/debian bookworm/main amd64 Packages [8788 kB]
0.884 Get:5 http://deb.debian.org/debian bookworm-updates/main amd64 Packages [13.8 kB]
0.895 Get:6 http://deb.debian.org/debian-security bookworm-security/main amd64 Packages [169 kB]



3.709 E: Unable to locate package upx-ucl
------

 [33m1 warning found (use --debug to expand):
[0m - Empty continuation line found in: RUN mkdir ./bin &&     apt-get update && apt-get install -y --no-install-recommends upx-ucl &&     rm -rf /var/lib/apt/lists/* &&     GOOS=$(echo $TARGETPLATFORM | cut -f1 -d/) &&     GOARCH=$(echo $TARGETPLATFORM | cut -f2 -d/) &&     GOARM=$(echo $TARGETPLATFORM | cut -f3 -d/ | sed "s/v//" ) &&     CGO_ENABLED=0 GOOS=${GOOS} GOARCH=${GOARCH} GOARM=${GOARM} go build ${BUILD_ARGS} -ldflags="-s" -tags netgo -installsuffix netgo -o ./bin/goStatic &&     mkdir ./bin/etc &&     ID=$(shuf -i 100-9999 -n 1) &&     upx -9 ./bin/goStatic &&     echo $ID &&     echo "appuser:x:$ID:$ID::/sbin/nologin:/bin/false" > ./bin/etc/passwd &&     echo "appgroup:x:$ID:appuser" > ./bin/etc/group
v1_Dockerfile:9
--------------------
   8 |     
   9 | >>> RUN mkdir ./bin && \
  10 | >>>     apt-get update && apt-get install -y --no-install-recommends upx-ucl && \
  11 | >>>     rm -rf /var/lib/apt/lists/* && \
  12 | >>> 
  13 | >>>     # getting right vars from docker buildx
  14 | >>>     # especially to handle linux/arm/v6 for example
  15 | >>>     GOOS=$(echo $TARGETPLATFORM | cut -f1 -d/) && \
  16 | >>>     GOARCH=$(echo $TARGETPLATFORM | cut -f2 -d/) && \
  17 | >>>     GOARM=$(echo $TARGETPLATFORM | cut -f3 -d/ | sed "s/v//" ) && \
  18 | >>> 
  19 | >>>     CGO_ENABLED=0 GOOS=${GOOS} GOARCH=${GOARCH} GOARM=${GOARM} go build ${BUILD_ARGS} -ldflags="-s" -tags netgo -installsuffix netgo -o ./bin/goStatic && \
  20 | >>> 
  21 | >>>     mkdir ./bin/etc && \
  22 | >>>     ID=$(shuf -i 100-9999 -n 1) && \
  23 | >>>     upx -9 ./bin/goStatic && \
  24 | >>>     echo $ID && \
  25 | >>>     echo "appuser:x:$ID:$ID::/sbin/nologin:/bin/false" > ./bin/etc/passwd && \
  26 | >>>     echo "appgroup:x:$ID:appuser" > ./bin/etc/group
  27 |     
--------------------
ERROR: failed to solve: process "/bin/sh -c mkdir ./bin &&     apt-get update && apt-get install -y --no-install-recommends upx-ucl &&     rm -rf /var/lib/apt/lists/* &&     GOOS=$(echo $TARGETPLATFORM | cut -f1 -d/) &&     GOARCH=$(echo $TARGETPLATFORM | cut -f2 -d/) &&     GOARM=$(echo $TARGETPLATFORM | cut -f3 -d/ | sed \"s/v//\" ) &&     CGO_ENABLED=0 GOOS=${GOOS} GOARCH=${GOARCH} GOARM=${GOARM} go build ${BUILD_ARGS} -ldflags=\"-s\" -tags netgo -installsuffix netgo -o ./bin/goStatic &&     mkdir ./bin/etc &&     ID=$(shuf -i 100-9999 -n 1) &&     upx -9 ./bin/goStatic &&     echo $ID &&     echo \"appuser:x:$ID:$ID::/sbin/nologin:/bin/false\" > ./bin/etc/passwd &&     echo \"appgroup:x:$ID:appuser\" > ./bin/etc/group" did not complete successfully: exit code: 100
Duration: 0:36.98