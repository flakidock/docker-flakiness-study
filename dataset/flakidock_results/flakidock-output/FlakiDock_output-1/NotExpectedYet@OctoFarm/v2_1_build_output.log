#0 building with "default" instance using docker driver

#1 [internal] load build definition from v2_Dockerfile
#1 transferring dockerfile: 33B
#1 transferring dockerfile: 1.09kB done
#1 DONE 0.5s

#2 [internal] load .dockerignore
#2 transferring context: 150B done
#2 DONE 0.4s

#3 [internal] load metadata for docker.io/library/alpine:3.14
#3 DONE 0.9s

#4 [internal] load build context
#4 DONE 0.0s

#5 [base 1/5] FROM docker.io/library/alpine:3.14@sha256:0f2d5c38dd7a4f4f733e688e3a6733cb5ab1ac6e3cb4603a5dd564e5bfb80eed
#5 resolve docker.io/library/alpine:3.14@sha256:0f2d5c38dd7a4f4f733e688e3a6733cb5ab1ac6e3cb4603a5dd564e5bfb80eed 0.1s done
#5 sha256:0f2d5c38dd7a4f4f733e688e3a6733cb5ab1ac6e3cb4603a5dd564e5bfb80eed 1.64kB / 1.64kB done
#5 sha256:71859b0c62df47efaeae4f93698b56a8dddafbf041778fd668bbd1ab45a864f8 528B / 528B done
#5 sha256:9e179bacf43c4d3428d57cf459799ba0285b901945f9eccb17b6da056d3532c7 1.47kB / 1.47kB done
#5 DONE 0.5s

#6 [base 2/5] RUN apk add --no-cache --virtual .base-deps     nodejs     npm     tini
#6 0.526 fetch https://dl-cdn.alpinelinux.org/alpine/v3.14/main/x86_64/APKINDEX.tar.gz
#6 ...

#4 [internal] load build context
#4 transferring context: 61.19MB 0.7s done
#4 DONE 1.0s

#6 [base 2/5] RUN apk add --no-cache --virtual .base-deps     nodejs     npm     tini
#6 0.750 fetch https://dl-cdn.alpinelinux.org/alpine/v3.14/community/x86_64/APKINDEX.tar.gz
#6 1.308 (1/10) Installing ca-certificates (20230506-r0)
#6 1.332 (2/10) Installing nghttp2-libs (1.43.0-r0)
#6 1.338 (3/10) Installing brotli-libs (1.0.9-r5)
#6 1.369 (4/10) Installing c-ares (1.17.2-r0)
#6 1.469 (5/10) Installing libgcc (10.3.1_git20210424-r2)
#6 1.478 (6/10) Installing libstdc++ (10.3.1_git20210424-r2)
#6 1.494 (7/10) Installing nodejs (14.21.3-r0)
#6 1.817 (8/10) Installing npm (7.17.0-r0)
#6 2.154 (9/10) Installing tini (0.19.0-r0)
#6 2.158 (10/10) Installing .base-deps (20240731.004240)
#6 2.161 Executing busybox-1.33.1-r8.trigger
#6 2.166 Executing ca-certificates-20230506-r0.trigger
#6 2.204 OK: 58 MiB in 24 packages
#6 DONE 4.9s

#7 [base 3/5] RUN npm install -g npm@6.14.15
#7 7.984 
#7 7.984 added 1 package, and audited 438 packages in 7s
#7 7.984 
#7 7.984 3 packages are looking for funding
#7 7.984   run `npm fund` for details
#7 8.052 
#7 8.052 35 vulnerabilities (12 moderate, 20 high, 3 critical)
#7 8.052 
#7 8.052 To address issues that do not require attention, run:
#7 8.052   npm audit fix
#7 8.052 
#7 8.052 To address all issues, run:
#7 8.052   npm audit fix --force
#7 8.052 
#7 8.052 Run `npm audit` for details.
#7 DONE 9.1s

#8 [base 4/5] RUN npm install -g pm2
#8 12.39 /usr/local/bin/pm2 -> /usr/local/lib/node_modules/pm2/bin/pm2
#8 12.39 /usr/local/bin/pm2-dev -> /usr/local/lib/node_modules/pm2/bin/pm2-dev
#8 12.39 /usr/local/bin/pm2-docker -> /usr/local/lib/node_modules/pm2/bin/pm2-docker
#8 12.39 /usr/local/bin/pm2-runtime -> /usr/local/lib/node_modules/pm2/bin/pm2-runtime
#8 12.46 npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/pm2/node_modules/chokidar/node_modules/fsevents):
#8 12.46 npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.3: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})
#8 12.46 
#8 12.46 + pm2@5.4.2
#8 12.46 added 138 packages from 172 contributors in 11.008s
#8 DONE 14.0s

#9 [base 5/5] RUN adduser -D octofarm --home /app &&     mkdir -p /scripts &&     chown -R octofarm:octofarm /scripts/
#9 DONE 1.0s

#10 [compiler 1/8] RUN apk add --no-cache --virtual .build-deps     alpine-sdk     make     gcc     g++     python3
#10 0.667 fetch https://dl-cdn.alpinelinux.org/alpine/v3.14/main/x86_64/APKINDEX.tar.gz
#10 0.888 fetch https://dl-cdn.alpinelinux.org/alpine/v3.14/community/x86_64/APKINDEX.tar.gz
#10 1.405 (1/45) Upgrading musl (1.2.2-r4 -> 1.2.2-r5)
#10 1.417 (2/45) Installing fakeroot (1.25.3-r3)
#10 1.422 (3/45) Installing openssl (1.1.1t-r2)
#10 1.432 (4/45) Installing libattr (2.5.1-r0)
#10 1.435 (5/45) Installing attr (2.5.1-r0)
#10 1.446 (6/45) Installing libacl (2.2.53-r0)
#10 1.448 (7/45) Installing tar (1.34-r1)
#10 1.458 (8/45) Installing pkgconf (1.7.4-r1)
#10 1.463 (9/45) Installing patch (2.7.6-r7)
#10 1.474 (10/45) Installing lzip (1.22-r0)
#10 1.479 (11/45) Installing libcurl (8.0.1-r0)
#10 1.489 (12/45) Installing curl (8.0.1-r0)
#10 1.496 (13/45) Installing abuild (3.8.0_rc4-r0)
#10 1.500 Executing abuild-3.8.0_rc4-r0.pre-install
#10 1.515 (14/45) Installing binutils (2.35.2-r2)
#10 1.611 (15/45) Installing libmagic (5.40-r1)
#10 1.640 (16/45) Installing file (5.40-r1)
#10 1.643 (17/45) Installing libgomp (10.3.1_git20210424-r2)
#10 1.650 (18/45) Installing libatomic (10.3.1_git20210424-r2)
#10 1.656 (19/45) Installing libgphobos (10.3.1_git20210424-r2)
#10 1.712 (20/45) Installing gmp (6.2.1-r1)
#10 1.721 (21/45) Installing isl22 (0.22-r0)
#10 1.742 (22/45) Installing mpfr4 (4.1.0-r0)
#10 1.776 (23/45) Installing mpc1 (1.2.1-r0)
#10 1.781 (24/45) Installing gcc (10.3.1_git20210424-r2)
#10 2.666 (25/45) Installing musl-dev (1.2.2-r5)
#10 2.780 (26/45) Installing libc-dev (0.7.2-r3)
#10 2.785 (27/45) Installing g++ (10.3.1_git20210424-r2)
#10 3.395 (28/45) Installing make (4.3-r0)
#10 3.403 (29/45) Installing fortify-headers (1.1-r1)
#10 3.412 (30/45) Installing build-base (0.5-r3)
#10 3.440 (31/45) Installing expat (2.5.0-r0)
#10 3.446 (32/45) Installing pcre2 (10.36-r1)
#10 3.458 (33/45) Installing git (2.32.7-r0)
#10 3.598 (34/45) Installing alpine-sdk (1.0-r1)
#10 3.601 (35/45) Installing libbz2 (1.0.8-r1)
#10 3.604 (36/45) Installing libffi (3.3-r2)
#10 3.611 (37/45) Installing gdbm (1.19-r0)
#10 3.617 (38/45) Installing xz-libs (5.2.5-r1)
#10 3.632 (39/45) Installing mpdecimal (2.5.1-r1)
#10 3.638 (40/45) Installing ncurses-terminfo-base (6.2_p20210612-r1)
#10 3.663 (41/45) Installing ncurses-libs (6.2_p20210612-r1)
#10 3.674 (42/45) Installing readline (8.1.0-r0)
#10 3.681 (43/45) Installing sqlite-libs (3.35.5-r0)
#10 3.697 (44/45) Installing python3 (3.9.17-r0)
#10 4.425 (45/45) Installing .build-deps (20240731.004309)
#10 4.427 Executing busybox-1.33.1-r8.trigger
#10 4.436 OK: 310 MiB in 68 packages
#10 DONE 9.6s

#11 [compiler 2/8] WORKDIR /tmp/app
#11 DONE 0.4s

#12 [compiler 3/8] COPY server/package.json ./server/package.json
#12 DONE 0.4s

#13 [compiler 4/8] COPY server/package-lock.json ./server/package-lock.json
#13 DONE 0.4s

#14 [compiler 5/8] WORKDIR /tmp/app/server
#14 DONE 0.4s

#15 [compiler 6/8] RUN npm ci --omit=dev
#15 1.467 npm ERR! fsevents not accessible from chokidar
#15 1.487 
#15 1.487 npm ERR! A complete log of this run can be found in:
#15 1.487 npm ERR!     /root/.npm/_logs/2024-07-31T00_43_20_721Z-debug.log
#15 ERROR: process "/bin/sh -c npm ci --omit=dev" did not complete successfully: exit code: 1
------
 > [compiler 6/8] RUN npm ci --omit=dev:
 ERR! fsevents not accessible from chokidar
1.487 
1.487 npm ERR! A complete log of this run can be found in:
1.487 npm ERR!     /root/.npm/_logs/2024-07-31T00_43_20_721Z-debug.log
------
v2_Dockerfile:35
--------------------
  33 |     WORKDIR /tmp/app/server
  34 |     
  35 | >>> RUN npm ci --omit=dev
  36 |     
  37 |     RUN apk del .build-deps
--------------------
ERROR: failed to solve: process "/bin/sh -c npm ci --omit=dev" did not complete successfully: exit code: 1
Duration: 0:44.62