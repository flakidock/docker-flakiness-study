#0 building with "default" instance using docker driver

#1 [internal] load build definition from v2_Dockerfile
#1 ...

#2 [internal] load .dockerignore
#2 transferring context: 71B done
#2 DONE 0.3s

#1 [internal] load build definition from v2_Dockerfile
#1 transferring dockerfile: 1.16kB done
#1 DONE 0.4s

#3 [auth] library/elixir:pull token for registry-1.docker.io
#3 DONE 0.0s

#4 [internal] load metadata for docker.io/library/elixir:1.13.4-alpine
#4 DONE 1.5s

#5 [1/8] FROM docker.io/library/elixir:1.13.4-alpine@sha256:1f04fa894f3e3589f1a9410f0c1b3936f5f426130c44114e78bb0644fe37fdde
#5 resolve docker.io/library/elixir:1.13.4-alpine@sha256:1f04fa894f3e3589f1a9410f0c1b3936f5f426130c44114e78bb0644fe37fdde
#5 ...

#6 [internal] load build context
#6 transferring context: 2.56kB done
#6 DONE 0.2s

#5 [1/8] FROM docker.io/library/elixir:1.13.4-alpine@sha256:1f04fa894f3e3589f1a9410f0c1b3936f5f426130c44114e78bb0644fe37fdde
#5 resolve docker.io/library/elixir:1.13.4-alpine@sha256:1f04fa894f3e3589f1a9410f0c1b3936f5f426130c44114e78bb0644fe37fdde 0.3s done
#5 sha256:1f04fa894f3e3589f1a9410f0c1b3936f5f426130c44114e78bb0644fe37fdde 7.70kB / 7.70kB done
#5 sha256:a889e5c737026b3623b8a8348c660e947ef81cf6ddfe14c6b7bb81dbff20d8ce 1.54kB / 1.54kB done
#5 sha256:891f54f3767786bf2bd8d8295ca1149c37a1e49c40f28344e6bdc57137f209fb 5.57kB / 5.57kB done
#5 sha256:d0cf49291a7736f749641aa51dd4e64e373a3328deeceeffd929367a4cf91422 0B / 5.96MB 0.1s
#5 sha256:b99da37831f37d3f77de0ac7a864f9b69f1dbb4461e5ddfe5a3c2b7e2a3586c5 0B / 3.39MB 0.1s
#5 sha256:b99da37831f37d3f77de0ac7a864f9b69f1dbb4461e5ddfe5a3c2b7e2a3586c5 3.15MB / 3.39MB 0.3s
#5 sha256:b12ede21323c48aa6e047549aa5b31c606b4bf1c1c5d91d9f4373ff5f3d9535d 0B / 45.67MB 0.3s
#5 sha256:d0cf49291a7736f749641aa51dd4e64e373a3328deeceeffd929367a4cf91422 5.24MB / 5.96MB 0.3s
#5 sha256:b99da37831f37d3f77de0ac7a864f9b69f1dbb4461e5ddfe5a3c2b7e2a3586c5 3.39MB / 3.39MB 0.3s done
#5 extracting sha256:b99da37831f37d3f77de0ac7a864f9b69f1dbb4461e5ddfe5a3c2b7e2a3586c5
#5 sha256:d0cf49291a7736f749641aa51dd4e64e373a3328deeceeffd929367a4cf91422 5.96MB / 5.96MB 0.4s
#5 sha256:b12ede21323c48aa6e047549aa5b31c606b4bf1c1c5d91d9f4373ff5f3d9535d 4.19MB / 45.67MB 0.4s
#5 sha256:d0cf49291a7736f749641aa51dd4e64e373a3328deeceeffd929367a4cf91422 5.96MB / 5.96MB 0.5s done
#5 sha256:b12ede21323c48aa6e047549aa5b31c606b4bf1c1c5d91d9f4373ff5f3d9535d 10.49MB / 45.67MB 0.5s
#5 sha256:b12ede21323c48aa6e047549aa5b31c606b4bf1c1c5d91d9f4373ff5f3d9535d 18.87MB / 45.67MB 0.8s
#5 extracting sha256:b99da37831f37d3f77de0ac7a864f9b69f1dbb4461e5ddfe5a3c2b7e2a3586c5 0.2s done
#5 sha256:b12ede21323c48aa6e047549aa5b31c606b4bf1c1c5d91d9f4373ff5f3d9535d 26.21MB / 45.67MB 0.9s
#5 sha256:b12ede21323c48aa6e047549aa5b31c606b4bf1c1c5d91d9f4373ff5f3d9535d 30.41MB / 45.67MB 1.0s
#5 sha256:b12ede21323c48aa6e047549aa5b31c606b4bf1c1c5d91d9f4373ff5f3d9535d 36.70MB / 45.67MB 1.2s
#5 sha256:b12ede21323c48aa6e047549aa5b31c606b4bf1c1c5d91d9f4373ff5f3d9535d 45.67MB / 45.67MB 1.3s
#5 sha256:b12ede21323c48aa6e047549aa5b31c606b4bf1c1c5d91d9f4373ff5f3d9535d 45.67MB / 45.67MB 2.1s done
#5 extracting sha256:b12ede21323c48aa6e047549aa5b31c606b4bf1c1c5d91d9f4373ff5f3d9535d 0.1s
#5 extracting sha256:b12ede21323c48aa6e047549aa5b31c606b4bf1c1c5d91d9f4373ff5f3d9535d 1.6s done
#5 extracting sha256:d0cf49291a7736f749641aa51dd4e64e373a3328deeceeffd929367a4cf91422
#5 extracting sha256:d0cf49291a7736f749641aa51dd4e64e373a3328deeceeffd929367a4cf91422 0.3s done
#5 DONE 5.4s

#7 [2/8] RUN echo "http://nl.alpinelinux.org/alpine/latest-stable/main" >> /etc/apk/repositories     && apk update     && apk add git gcc g++ musl-dev make cmake file-dev     exiftool imagemagick libmagic ncurses postgresql-client ffmpeg
#7 0.484 fetch https://dl-cdn.alpinelinux.org/alpine/v3.17/main/x86_64/APKINDEX.tar.gz
#7 0.780 fetch https://dl-cdn.alpinelinux.org/alpine/v3.17/community/x86_64/APKINDEX.tar.gz
#7 1.101 fetch http://nl.alpinelinux.org/alpine/latest-stable/main/x86_64/APKINDEX.tar.gz
#7 2.062 v3.17.9-10-g237185b0671 [https://dl-cdn.alpinelinux.org/alpine/v3.17/main]
#7 2.062 v3.17.9-10-g237185b0671 [https://dl-cdn.alpinelinux.org/alpine/v3.17/community]
#7 2.062 v3.20.2-45-g194e307d75d [http://nl.alpinelinux.org/alpine/latest-stable/main]
#7 2.062 OK: 23342 distinct packages available
#7 2.423 (1/139) Upgrading musl (1.2.3-r5 -> 1.2.5-r0)
#7 3.289 (2/139) Upgrading libstdc++ (12.2.1_git20220924-r4 -> 13.2.1_git20240309-r0)
#7 4.170 (3/139) Installing libacl (2.3.2-r0)
#7 4.689 (4/139) Installing libbz2 (1.0.8-r6)
#7 5.257 (5/139) Installing libexpat (2.6.2-r0)
#7 5.405 (6/139) Installing lz4-libs (1.9.4-r5)
#7 6.035 (7/139) Installing xz-libs (5.6.1-r3)
#7 6.755 (8/139) Installing zstd-libs (1.5.6-r0)
#7 7.487 (9/139) Installing libarchive (3.7.4-r0)
#7 7.509 (10/139) Installing rhash-libs (1.4.4-r0)
#7 8.204 (11/139) Installing libuv (1.48.0-r0)
#7 8.900 (12/139) Installing cmake (3.29.3-r0)
#7 10.86 (13/139) Installing perl (5.38.2-r0)
#7 14.30 (14/139) Installing perl-image-exiftool (12.50-r0)
#7 14.45 (15/139) Installing exiftool (12.50-r0)
#7 14.45 (16/139) Installing sdl2 (2.26.5-r0)
#7 14.47 (17/139) Installing svt-av1-libs (1.3.0-r0)
#7 14.57 (18/139) Installing libxau (1.0.11-r4)
#7 15.09 (19/139) Installing libmd (1.1.0-r0)
#7 15.63 (20/139) Installing libbsd (0.12.2-r0)
#7 16.16 (21/139) Installing libxdmcp (1.1.5-r1)
#7 16.66 (22/139) Installing libxcb (1.16.1-r0)
#7 17.45 (23/139) Installing libx11 (1.8.9-r1)
#7 18.41 (24/139) Installing aom-libs (3.9.0-r0)
#7 19.45 (25/139) Installing alsa-lib (1.2.11-r0)
#7 20.23 (26/139) Installing brotli-libs (1.1.0-r2)
#7 21.00 (27/139) Installing libpng (1.6.43-r0)
#7 21.76 (28/139) Installing freetype (2.13.2-r0)
#7 22.47 (29/139) Installing fontconfig (2.15.0-r1)
#7 23.18 (30/139) Installing fribidi (1.0.15-r0)
#7 23.71 (31/139) Installing libffi (3.4.6-r0)
#7 28.00 (32/139) Installing libintl (0.22.5-r0)
#7 31.20 (33/139) Installing libeconf (0.6.3-r0)
#7 31.77 (34/139) Installing libblkid (2.40.1-r1)
#7 32.46 (35/139) Installing libmount (2.40.1-r1)
#7 33.12 (36/139) Installing pcre2 (10.43-r0)
#7 33.81 (37/139) Installing glib (2.80.2-r0)
#7 34.71 (38/139) Installing graphite2 (1.3.14-r6)
#7 35.38 (39/139) Installing harfbuzz (8.5.0-r0)
#7 36.18 (40/139) Installing libass (0.16.0-r1)
#7 36.19 (41/139) Installing libdav1d (1.0.0-r2)
#7 36.21 (42/139) Installing hwdata-pci (0.382-r0)
#7 36.96 (43/139) Installing libpciaccess (0.18.1-r0)
#7 37.49 (44/139) Installing libdrm (2.4.120-r0)
#7 38.18 (45/139) Installing gmp (6.3.0-r1)
#7 38.94 (46/139) Installing nettle (3.9.1-r0)
#7 39.71 (47/139) Installing libunistring (1.2-r0)
#7 40.54 (48/139) Installing libidn2 (2.3.7-r0)
#7 41.20 (49/139) Installing libtasn1 (4.19.0-r2)
#7 41.76 (50/139) Installing p11-kit (0.25.3-r0)
#7 42.47 (51/139) Installing gnutls (3.8.5-r0)
#7 43.30 (52/139) Installing lame (3.100-r2)
#7 43.31 (53/139) Installing opus (1.5.2-r0)
#7 44.13 (54/139) Installing libasyncns (0.8-r1)
#7 44.13 (55/139) Installing dbus-libs (1.14.10-r1)
#7 44.80 (56/139) Installing libltdl (2.4.7-r3)
#7 45.35 (57/139) Installing orc (0.4.37-r0)
#7 46.15 (58/139) Installing libogg (1.3.5-r5)
#7 46.73 (59/139) Installing libflac (1.4.3-r1)
#7 47.46 (60/139) Installing libvorbis (1.3.7-r2)
#7 48.19 (61/139) Installing libsndfile (1.2.2-r0)
#7 48.95 (62/139) Installing libgomp (13.2.1_git20240309-r0)
#7 49.59 (63/139) Installing soxr (0.1.3-r3)
#7 49.59 (64/139) Installing speexdsp (1.2.1-r2)
#7 50.15 (65/139) Installing tdb-libs (1.4.9-r1)
#7 50.77 (66/139) Installing libpulse (16.1-r6)
#7 50.79 (67/139) Installing cjson (1.7.18-r0)
#7 51.33 (68/139) Installing mbedtls (2.28.8-r0)
#7 51.34 (69/139) Installing librist (0.2.7-r0)
#7 51.53 (70/139) Installing libsrt (1.5.1-r0)
#7 51.56 (71/139) Installing libssh (0.10.5-r0)
#7 51.58 (72/139) Installing libtheora (1.1.1-r18)
#7 52.32 (73/139) Installing libjpeg-turbo (3.0.3-r0)
#7 53.03 (74/139) Installing v4l-utils-libs (1.22.1-r2)
#7 53.04 (75/139) Installing libxext (1.3.6-r2)
#7 53.60 (76/139) Installing libxfixes (6.0.1-r4)
#7 54.09 (77/139) Installing wayland-libs-client (1.22.0-r4)
#7 54.66 (78/139) Installing libva (2.21.0-r0)
#7 55.32 (79/139) Installing libvdpau (1.5-r3)
#7 55.87 (80/139) Installing vidstab (1.1.0-r2)
#7 55.87 (81/139) Installing libvpx (1.12.0-r2)
#7 55.91 (82/139) Installing libsharpyuv (1.3.2-r0)
#7 56.40 (83/139) Installing libwebp (1.3.2-r0)
#7 57.17 (84/139) Installing libwebpmux (1.3.2-r0)
#7 57.73 (85/139) Installing x264-libs (0.164_git20220602-r0)
#7 57.76 (86/139) Installing numactl (2.0.18-r0)
#7 58.31 (87/139) Installing x265-libs (3.5-r3)
#7 58.42 (88/139) Installing xvidcore (1.3.7-r1)
#7 58.43 (89/139) Installing libsodium (1.0.19-r0)
#7 59.13 (90/139) Installing libzmq (4.3.5-r2)
#7 60.03 (91/139) Installing ffmpeg-libs (5.1.4-r0)
#7 60.24 (92/139) Installing ffmpeg (5.1.4-r0)
#7 60.27 (93/139) Installing libmagic (5.45-r1)
#7 61.11 (94/139) Installing pkgconf (2.2.0-r0)
#7 61.73 (95/139) Installing file-dev (5.45-r1)
#7 62.23 (96/139) Installing libstdc++-dev (13.2.1_git20240309-r0)
#7 63.34 (97/139) Installing jansson (2.14-r4)
#7 63.89 (98/139) Installing binutils (2.42-r0)
#7 64.86 (99/139) Installing libatomic (13.2.1_git20240309-r0)
#7 65.35 (100/139) Installing isl26 (0.26-r1)
#7 66.23 (101/139) Installing mpfr4 (4.2.1-r0)
#7 66.98 (102/139) Installing mpc1 (1.3.1-r1)
#7 67.59 (103/139) Installing gcc (13.2.1_git20240309-r0)
#7 69.86 (104/139) Installing musl-dev (1.2.5-r0)
#7 70.84 (105/139) Installing g++ (13.2.1_git20240309-r0)
#7 72.14 (106/139) Installing nghttp2-libs (1.62.1-r0)
#7 72.77 (107/139) Installing libcurl (8.9.0-r0)
#7 72.78 (108/139) Installing git (2.45.2-r0)
#7 73.79 (109/139) Installing git-init-template (2.45.2-r0)
#7 74.28 (110/139) Installing perl-error (0.17029-r2)
#7 74.85 (111/139) Installing perl-git (2.45.2-r0)
#7 75.42 (112/139) Installing git-perl (2.45.2-r0)
#7 76.00 (113/139) Installing lcms2 (2.16-r0)
#7 76.72 (114/139) Installing libxml2 (2.12.7-r0)
#7 77.54 (115/139) Installing imagemagick-libs (7.1.0.62-r0)
#7 77.57 (116/139) Installing libxrender (0.9.11-r5)
#7 78.16 (117/139) Installing pixman (0.43.2-r0)
#7 78.93 (118/139) Installing cairo (1.18.0-r0)
#7 79.72 (119/139) Installing avahi-libs (0.8-r17)
#7 80.35 (120/139) Installing cups-libs (2.4.9-r0)
#7 80.36 (121/139) Installing jbig2dec (0.20-r0)
#7 80.95 (122/139) Installing tiff (4.4.0-r4)
#7 80.96 (123/139) Installing ghostscript (10.01.2-r0)
#7 81.54 (124/139) Installing libde265 (1.0.15-r0)
#7 81.55 (125/139) Installing libheif (1.13.0-r0)
#7 81.57 (126/139) Installing libjxl (0.7.0-r0)
#7 81.66 (127/139) Installing cairo-gobject (1.18.0-r0)
#7 82.15 (128/139) Installing shared-mime-info (2.4-r0)
#7 82.96 (129/139) Installing gdk-pixbuf (2.42.10-r0)
#7 82.98 (130/139) Installing libxft (2.3.8-r3)
#7 83.52 (131/139) Installing pango (1.52.2-r0)
#7 84.23 (132/139) Installing librsvg (2.55.1-r0)
#7 84.31 (133/139) Installing libwebpdemux (1.3.2-r0)
#7 84.81 (134/139) Installing imagemagick (7.1.0.62-r0)
#7 84.88 (135/139) Installing make (4.4.1-r2)
#7 85.61 (136/139) Installing ncurses (6.4_p20240420-r0)
#7 86.32 (137/139) Installing postgresql-common (1.2-r1)
#7 86.83 Executing postgresql-common-1.2-r1.pre-install
#7 86.99 (138/139) Installing libpq (16.3-r0)
#7 87.67 (139/139) Installing postgresql16-client (16.3-r0)
#7 88.62 Executing busybox-1.35.0-r31.trigger
#7 88.63 Executing fontconfig-2.15.0-r1.trigger
#7 88.64 Executing glib-2.80.2-r0.trigger
#7 88.64 Executing shared-mime-info-2.4-r0.trigger
#7 89.26 Executing gdk-pixbuf-2.42.10-r0.trigger
#7 89.28 Executing postgresql-common-1.2-r1.trigger
#7 89.28 * Setting postgresql16 as the default version
#7 89.72 OK: 549 MiB in 162 packages
#7 DONE 95.3s

#8 [3/8] RUN addgroup -g 911 pleroma     && adduser -h /pleroma -s /bin/false -D -G pleroma -u 911 pleroma
#8 DONE 1.0s

#9 [4/8] RUN mkdir -p /etc/pleroma     && chown -R pleroma /etc/pleroma     && mkdir -p /var/lib/pleroma/uploads     && mkdir -p /var/lib/pleroma/static     && chown -R pleroma /var/lib/pleroma
#9 DONE 0.8s

#10 [5/8] WORKDIR /pleroma
#10 DONE 0.4s

#11 [6/8] RUN git clone -b develop https://git.pleroma.social/pleroma/pleroma.git /pleroma     && cd /pleroma     && git checkout develop
#11 0.559 Cloning into '/pleroma'...
#11 28.97 Already on 'develop'
#11 28.97 Your branch is up to date with 'origin/develop'.
#11 DONE 31.2s

#12 [7/8] RUN echo "import Mix.Config" > config/prod.secret.exs     && mix local.hex --force     && mix local.rebar --force     && mix deps.get --only prod     && mkdir release     && mix release --path /pleroma
#12 2.091 * creating .mix/archives/hex-2.1.1
#12 3.382 * creating .mix/rebar
#12 3.605 * creating .mix/rebar3
#12 4.658 * Getting remote_ip (https://git.pleroma.social/pleroma/remote_ip.git - b647d0deecaa3acb140854fe4bda5b7e1dc6d1c8)
#12 5.312 remote: Enumerating objects: 141, done.        
#12 5.415 remote: Total 141 (delta 0), reused 0 (delta 0), pack-reused 141 (from 1)        
#12 5.514 * Getting captcha (https://git.pleroma.social/pleroma/elixir-libraries/elixir-captcha.git - 6630c42aaaab124e697b4e513190c89d8b64e410)
#12 6.039 remote: Enumerating objects: 129, done.        
#12 6.039 remote: Counting objects:   1% (1/56)        remote: Counting objects:   3% (2/56)        remote: Counting objects:   5% (3/56)        remote: Counting objects:   7% (4/56)        remote: Counting objects:   8% (5/56)        remote: Counting objects:  10% (6/56)        remote: Counting objects:  12% (7/56)        remote: Counting objects:  14% (8/56)        remote: Counting objects:  16% (9/56)        remote: Counting objects:  17% (10/56)        remote: Counting objects:  19% (11/56)        remote: Counting objects:  21% (12/56)        remote: Counting objects:  23% (13/56)        remote: Counting objects:  25% (14/56)        remote: Counting objects:  26% (15/56)        remote: Counting objects:  28% (16/56)        remote: Counting objects:  30% (17/56)        remote: Counting objects:  32% (18/56)        remote: Counting objects:  33% (19/56)        remote: Counting objects:  35% (20/56)        remote: Counting objects:  37% (21/56)        remote: Counting objects:  39% (22/56)        remote: Counting objects:  41% (23/56)        remote: Counting objects:  42% (24/56)        remote: Counting objects:  44% (25/56)        remote: Counting objects:  46% (26/56)        remote: Counting objects:  48% (27/56)        remote: Counting objects:  50% (28/56)        remote: Counting objects:  51% (29/56)        remote: Counting objects:  53% (30/56)        remote: Counting objects:  55% (31/56)        remote: Counting objects:  57% (32/56)        remote: Counting objects:  58% (33/56)        remote: Counting objects:  60% (34/56)        remote: Counting objects:  62% (35/56)        remote: Counting objects:  64% (36/56)        remote: Counting objects:  66% (37/56)        remote: Counting objects:  67% (38/56)        remote: Counting objects:  69% (39/56)        remote: Counting objects:  71% (40/56)        remote: Counting objects:  73% (41/56)        remote: Counting objects:  75% (42/56)        remote: Counting objects:  76% (43/56)        remote: Counting objects:  78% (44/56)        remote: Counting objects:  80% (45/56)        remote: Counting objects:  82% (46/56)        remote: Counting objects:  83% (47/56)        remote: Counting objects:  85% (48/56)        remote: Counting objects:  87% (49/56)        remote: Counting objects:  89% (50/56)        remote: Counting objects:  91% (51/56)        remote: Counting objects:  92% (52/56)        remote: Counting objects:  94% (53/56)        remote: Counting objects:  96% (54/56)        remote: Counting objects:  98% (55/56)        remote: Counting objects: 100% (56/56)        remote: Counting objects: 100% (56/56), done.        
#12 6.039 remote: Compressing objects:   3% (1/33)        remote: Compressing objects:   6% (2/33)        remote: Compressing objects:   9% (3/33)        remote: Compressing objects:  12% (4/33)        remote: Compressing objects:  15% (5/33)        remote: Compressing objects:  18% (6/33)        remote: Compressing objects:  21% (7/33)        remote: Compressing objects:  24% (8/33)        remote: Compressing objects:  27% (9/33)        remote: Compressing objects:  30% (10/33)        remote: Compressing objects:  33% (11/33)        remote: Compressing objects:  36% (12/33)        remote: Compressing objects:  39% (13/33)        remote: Compressing objects:  42% (14/33)        remote: Compressing objects:  45% (15/33)        remote: Compressing objects:  48% (16/33)        remote: Compressing objects:  51% (17/33)        remote: Compressing objects:  54% (18/33)        remote: Compressing objects:  57% (19/33)        remote: Compressing objects:  60% (20/33)        remote: Compressing objects:  63% (21/33)        remote: Compressing objects:  66% (22/33)        remote: Compressing objects:  69% (23/33)        remote: Compressing objects:  72% (24/33)        remote: Compressing objects:  75% (25/33)        remote: Compressing objects:  78% (26/33)        remote: Compressing objects:  81% (27/33)        remote: Compressing objects:  84% (28/33)        remote: Compressing objects:  87% (29/33)        remote: Compressing objects:  90% (30/33)        remote: Compressing objects:  93% (31/33)        remote: Compressing objects:  96% (32/33)        remote: Compressing objects: 100% (33/33)        remote: Compressing objects: 100% (33/33), done.        
#12 6.100 remote: Total 129 (delta 33), reused 30 (delta 22), pack-reused 73 (from 1)        
#12 6.833 Resolving Hex dependencies...
#12 8.832 Resolution completed in 1.99s
#12 9.286 Unchanged:
#12 9.286   bandit 1.5.5
#12 9.286   base62 1.2.2
#12 9.286   bbcode_pleroma 0.2.0
#12 9.286   bcrypt_elixir 2.3.1
#12 9.286   cachex 3.6.0
#12 9.286   calendar 1.0.0
#12 9.286   castore 0.1.22
#12 9.286   cc_precompiler 0.1.9
#12 9.287   certifi 2.12.0
#12 9.287   combine 0.10.0
#12 9.287   comeonin 5.4.0
#12 9.287   concurrent_limiter 0.1.1
#12 9.287   cors_plug 2.0.3
#12 9.287   cowboy 2.12.0
#12 9.287   cowboy_telemetry 0.4.0
#12 9.287   cowlib 2.13.0
#12 9.287   custom_base 0.2.1
#12 9.287   db_connection 2.7.0
#12 9.287   decimal 2.1.1
#12 9.287   earmark 1.4.46
#12 9.287   ecto 3.11.2
#12 9.287   ecto_enum 1.4.0
#12 9.287   ecto_psql_extras 0.7.15
#12 9.287   ecto_sql 3.11.3
#12 9.288   elixir_make 0.7.8
#12 9.288   eternal 1.2.2
#12 9.288   ex_aws 2.1.9
#12 9.288   ex_aws_s3 2.5.3
#12 9.288   ex_const 0.2.4
#12 9.288   ex_syslogger 1.5.2
#12 9.288   exile 0.10.0
#12 9.288   expo 0.5.1
#12 9.288   fast_html 2.2.0
#12 9.288   fast_sanitize 0.2.3
#12 9.288   finch 0.18.0
#12 9.288   flake_id 0.1.0
#12 9.288   floki 0.35.2
#12 9.288   gen_smtp 0.15.0
#12 9.288   gettext 0.24.0
#12 9.288   gun 2.0.1
#12 9.288   hackney 1.18.2
#12 9.288   hpax 0.2.0
#12 9.288   html_entities 0.5.2
#12 9.288   http_signatures 0.1.2
#12 9.289   httpoison 1.8.2
#12 9.289   idna 6.1.1
#12 9.289   inet_cidr 1.0.8
#12 9.289   jason 1.4.3
#12 9.289   joken 2.6.0
#12 9.289   jose 1.11.6
#12 9.289   jumper 1.0.2
#12 9.289   linkify 0.5.3
#12 9.289   majic 1.0.0
#12 9.289   metrics 1.0.1
#12 9.289   mime 1.6.0
#12 9.289   mimerl 1.3.0
#12 9.289   mint 1.6.1
#12 9.289   mogrify 0.8.0
#12 9.289   nimble_options 1.1.1
#12 9.289   nimble_parsec 0.6.0
#12 9.289   nimble_pool 0.2.6
#12 9.290   oban 2.17.12
#12 9.290   oban_live_dashboard 0.1.1
#12 9.290   octo_fetch 0.4.0
#12 9.290   open_api_spex 3.18.2
#12 9.290   parse_trans 3.4.1
#12 9.290   phoenix 1.7.14
#12 9.290   phoenix_ecto 4.4.3
#12 9.290   phoenix_html 3.3.4
#12 9.290   phoenix_live_dashboard 0.8.3
#12 9.290   phoenix_live_view 0.19.5
#12 9.290   phoenix_pubsub 2.1.3
#12 9.290   phoenix_swoosh 1.2.1
#12 9.290   phoenix_template 1.0.4
#12 9.290   phoenix_view 2.0.4
#12 9.290   plug 1.16.1
#12 9.290   plug_cowboy 2.7.1
#12 9.290   plug_crypto 2.1.0
#12 9.290   plug_static_index_html 1.0.0
#12 9.291   poolboy 1.5.2
#12 9.291   postgrex 0.17.5
#12 9.291   pot 1.0.2
#12 9.291   prom_ex 1.9.0
#12 9.291   ranch 1.8.0
#12 9.291   recon 2.5.4
#12 9.291   rinpatch_blurhash 0.1.0
#12 9.291   sleeplocks 1.1.2
#12 9.291   ssl_verify_fun 1.1.7
#12 9.291   sweet_xml 0.7.4
#12 9.291   swoosh 1.16.9
#12 9.291   syslog 1.1.0
#12 9.291   table_rex 4.0.0
#12 9.291   telemetry 1.0.0
#12 9.291   telemetry_metrics 0.6.2
#12 9.291   telemetry_metrics_prometheus_core 1.2.0
#12 9.291   telemetry_poller 1.0.0
#12 9.291   tesla 1.11.0
#12 9.291   thousand_island 1.3.5
#12 9.291   timex 3.7.7
#12 9.291   trailing_format_plug 0.0.7
#12 9.292   tzdata 1.0.5
#12 9.292   ueberauth 0.10.7
#12 9.292   unicode_util_compat 0.7.0
#12 9.292   unsafe 1.0.2
#12 9.292   vix 0.26.0
#12 9.292   web_push_encryption 0.3.1
#12 9.292   websock 0.5.3
#12 9.292   websock_adapter 0.5.6
#12 9.347 * Getting phoenix (Hex package)
#12 9.583 * Getting phoenix_ecto (Hex package)
#12 9.591 * Getting ecto_sql (Hex package)
#12 9.616 * Getting ecto_enum (Hex package)
#12 9.622 * Getting postgrex (Hex package)
#12 9.653 * Getting phoenix_html (Hex package)
#12 9.661 * Getting phoenix_live_view (Hex package)
#12 9.713 * Getting phoenix_live_dashboard (Hex package)
#12 9.743 * Getting telemetry_metrics (Hex package)
#12 9.750 * Getting telemetry_poller (Hex package)
#12 9.760 * Getting tzdata (Hex package)
#12 9.805 * Getting plug_cowboy (Hex package)
#12 9.812 * Getting oban (Hex package)
#12 9.840 * Getting gettext (Hex package)
#12 9.852 * Getting bcrypt_elixir (Hex package)
#12 9.859 * Getting trailing_format_plug (Hex package)
#12 9.863 * Getting fast_sanitize (Hex package)
#12 9.871 * Getting html_entities (Hex package)
#12 9.875 * Getting calendar (Hex package)
#12 9.887 * Getting cachex (Hex package)
#12 9.912 * Getting tesla (Hex package)
#12 9.932 * Getting castore (Hex package)
#12 9.939 * Getting cowlib (Hex package)
#12 9.959 * Getting gun (Hex package)
#12 9.980 * Getting finch (Hex package)
#12 9.990 * Getting jason (Hex package)
#12 9.997 * Getting mogrify (Hex package)
#12 10.00 * Getting ex_aws (Hex package)
#12 10.02 * Getting ex_aws_s3 (Hex package)
#12 10.03 * Getting sweet_xml (Hex package)
#12 10.03 * Getting earmark (Hex package)
#12 10.06 * Getting bbcode_pleroma (Hex package)
#12 10.07 * Getting cors_plug (Hex package)
#12 10.07 * Getting web_push_encryption (Hex package)
#12 10.07 * Getting swoosh (Hex package)
#12 10.10 * Getting phoenix_swoosh (Hex package)
#12 10.11 * Getting gen_smtp (Hex package)
#12 10.12 * Getting ex_syslogger (Hex package)
#12 10.12 * Getting floki (Hex package)
#12 10.14 * Getting timex (Hex package)
#12 10.29 * Getting ueberauth (Hex package)
#12 10.30 * Getting linkify (Hex package)
#12 10.30 * Getting http_signatures (Hex package)
#12 10.31 * Getting telemetry (Hex package)
#12 10.31 * Getting poolboy (Hex package)
#12 10.32 * Getting prom_ex (Hex package)
#12 10.35 * Getting recon (Hex package)
#12 10.36 * Getting joken (Hex package)
#12 10.36 * Getting pot (Hex package)
#12 10.37 * Getting ex_const (Hex package)
#12 10.37 * Getting plug_static_index_html (Hex package)
#12 10.38 * Getting flake_id (Hex package)
#12 10.38 * Getting concurrent_limiter (Hex package)
#12 10.39 * Getting majic (Hex package)
#12 10.39 * Getting open_api_spex (Hex package)
#12 10.43 * Getting ecto_psql_extras (Hex package)
#12 10.45 * Getting vix (Hex package)
#12 10.47 * Getting elixir_make (Hex package)
#12 10.48 * Getting blurhash (Hex package)
#12 10.48 * Getting exile (Hex package)
#12 10.49 * Getting bandit (Hex package)
#12 10.52 * Getting websock_adapter (Hex package)
#12 10.52 * Getting oban_live_dashboard (Hex package)
#12 10.53 * Getting hackney (Hex package)
#12 10.55 * Getting certifi (Hex package)
#12 10.56 * Getting idna (Hex package)
#12 10.58 * Getting metrics (Hex package)
#12 10.58 * Getting mimerl (Hex package)
#12 10.59 * Getting parse_trans (Hex package)
#12 10.60 * Getting ssl_verify_fun (Hex package)
#12 10.60 * Getting unicode_util_compat (Hex package)
#12 10.61 * Getting plug (Hex package)
#12 10.63 * Getting websock (Hex package)
#12 10.64 * Getting mime (Hex package)
#12 10.64 * Getting plug_crypto (Hex package)
#12 10.65 * Getting hpax (Hex package)
#12 10.65 * Getting thousand_island (Hex package)
#12 10.67 * Getting cc_precompiler (Hex package)
#12 10.67 * Getting table_rex (Hex package)
#12 10.68 * Getting nimble_pool (Hex package)
#12 10.68 * Getting combine (Hex package)
#12 10.69 * Getting inet_cidr (Hex package)
#12 10.69 * Getting base62 (Hex package)
#12 10.70 * Getting custom_base (Hex package)
#12 10.70 * Getting jose (Hex package)
#12 10.76 * Getting octo_fetch (Hex package)
#12 10.76 * Getting telemetry_metrics_prometheus_core (Hex package)
#12 10.77 * Getting syslog (Hex package)
#12 10.78 * Getting phoenix_view (Hex package)
#12 10.78 * Getting phoenix_template (Hex package)
#12 10.79 * Getting httpoison (Hex package)
#12 10.79 * Getting nimble_parsec (Hex package)
#12 10.80 * Getting mint (Hex package)
#12 10.81 * Getting nimble_options (Hex package)
#12 10.82 * Getting eternal (Hex package)
#12 10.82 * Getting jumper (Hex package)
#12 10.83 * Getting sleeplocks (Hex package)
#12 10.83 * Getting unsafe (Hex package)
#12 10.83 * Getting fast_html (Hex package)
#12 11.37 * Getting comeonin (Hex package)
#12 11.38 * Getting expo (Hex package)
#12 11.39 * Getting cowboy (Hex package)
#12 11.41 * Getting cowboy_telemetry (Hex package)
#12 11.42 * Getting ranch (Hex package)
#12 11.43 * Getting db_connection (Hex package)
#12 11.44 * Getting decimal (Hex package)
#12 11.45 * Getting ecto (Hex package)
#12 11.49 * Getting phoenix_pubsub (Hex package)
#12 11.50 You have added/upgraded packages you could sponsor, run `mix hex.sponsor` to learn more
#12 12.92 ==> captcha
#12 12.92 rm -f priv/captcha src/captcha.o 
#12 12.92 cc -g   -c -o src/captcha.o src/captcha.c
#12 12.92 mkdir -p priv
#12 12.92 cc -g -I src -o priv/captcha  src/captcha.o 
#12 12.92 
#12 12.95 Compiling 1 file (.ex)
#12 13.05 Generated captcha app
#12 13.05 ==> restarter
#12 13.05 Compiling 2 files (.ex)
#12 13.14 Generated restarter app
#12 13.17 ==> jumper
#12 13.17 Compiling 1 file (.ex)
#12 13.22 Generated jumper app
#12 13.24 ==> nimble_options
#12 13.24 Compiling 3 files (.ex)
#12 13.71 Generated nimble_options app
#12 14.37 ===> Analyzing applications...
#12 14.42 ===> Compiling parse_trans
#12 15.46 ==> unsafe
#12 15.46 Compiling 3 files (.ex)
#12 15.56 Generated unsafe app
#12 15.60 ==> hpax
#12 15.60 Compiling 4 files (.ex)
#12 16.49 Generated hpax app
#12 17.20 ===> Analyzing applications...
#12 17.26 ===> Compiling mimerl
#12 18.51 ==> nimble_pool
#12 18.51 Compiling 2 files (.ex)
#12 18.84 Generated nimble_pool app
#12 18.86 ==> nimble_parsec
#12 18.86 Compiling 4 files (.ex)
#12 19.29 Generated nimble_parsec app
#12 19.32 ==> bbcode_pleroma
#12 19.32 Compiling 3 files (.ex)
#12 20.10 Generated bbcode_pleroma app
#12 20.81 ===> Analyzing applications...
#12 20.85 ===> Compiling sleeplocks
#12 22.07 ===> Analyzing applications...
#12 22.11 ===> Compiling metrics
#12 23.30 ===> Analyzing applications...
#12 23.46 ===> Compiling unicode_util_compat
#12 24.80 ===> Analyzing applications...
#12 25.42 ===> Compiling idna
#12 30.19 ==> jose
#12 30.19 Compiling 112 files (.erl)
#12 32.48 Compiling 8 files (.ex)
#12 33.15 Generated jose app
#12 34.51 ===> Fetching pc v1.15.0
#12 34.61 ===> Analyzing applications...
#12 34.65 ===> Compiling pc
#12 35.16 ===> Analyzing applications...
#12 35.17 ===> Compiling syslog
#12 35.27 ===> Compiling c_src/syslog_drv.c
#12 35.27 ===> Linking /pleroma/_build/prod/lib/syslog/priv/syslog_drv.so
#12 35.37 ==> ex_syslogger
#12 35.37 Compiling 2 files (.ex)
#12 35.41 warning: redefining @doc attribute previously set at line 199.
#12 35.41 
#12 35.41 Please remove the duplicate docs. If instead you want to override a previously defined @doc, attach the @doc attribute to a function head (the function signature not followed by any do-block). For example:
#12 35.41 
#12 35.41     @doc """
#12 35.41     new docs
#12 35.41     """
#12 35.41     def handle_event(...)
#12 35.41 
#12 35.41   lib/ex_syslogger.ex:206: ExSyslogger.handle_event/2
#12 35.41 
#12 35.46 Generated ex_syslogger app
#12 36.20 ===> Analyzing applications...
#12 36.24 ===> Compiling ranch
#12 37.00 ==> floki
#12 37.00 Compiling 1 file (.xrl)
#12 37.06 Compiling 2 files (.erl)
#12 37.52 Compiling 29 files (.ex)
#12 41.20 Generated floki app
#12 41.97 ===> Analyzing applications...
#12 42.01 ===> Compiling poolboy
#12 43.33 ===> Analyzing applications...
#12 43.37 ===> Compiling telemetry
#12 43.90 ==> telemetry_metrics
#12 43.90 Compiling 7 files (.ex)
#12 44.09 Generated telemetry_metrics app
#12 44.83 ===> Analyzing applications...
#12 44.87 ===> Compiling telemetry_poller
#12 45.43 ==> eternal
#12 45.43 Compiling 5 files (.ex)
#12 45.58 Generated eternal app
#12 45.62 ==> cachex
#12 45.62 Compiling 56 files (.ex)
#12 47.00 Generated cachex app
#12 47.02 ==> decimal
#12 47.02 Compiling 4 files (.ex)
#12 47.92 Generated decimal app
#12 47.96 ==> jason
#12 47.96 Compiling 10 files (.ex)
#12 49.99 Generated jason app
#12 50.02 ==> recon
#12 50.02 Compiling 6 files (.erl)
#12 50.20 Generated recon app
#12 50.23 ==> comeonin
#12 50.23 Compiling 3 files (.ex)
#12 50.45 Generated comeonin app
#12 50.50 ==> ssl_verify_fun
#12 50.50 Compiling 7 files (.erl)
#12 50.55 Generated ssl_verify_fun app
#12 51.31 ===> Analyzing applications...
#12 51.45 ===> Compiling gen_smtp
#12 52.30 src/gen_smtp_application.erl:12:10: Warning: variable '_App' is bound multiple times in this pattern. If you mean to ignore this value, use '_' or a different underscore-prefixed name
#12 52.30 src/gen_smtp_application.erl:12:42: Warning: variable '_App' is bound multiple times in this pattern. If you mean to ignore this value, use '_' or a different underscore-prefixed name
#12 52.30 
#12 52.35 src/smtp_util.erl:73:8: Warning: crypto:hmac/3 is removed; use crypto:mac/4 instead
#12 52.35 
#12 52.79 ==> concurrent_limiter
#12 52.79 Compiling 1 file (.ex)
#12 52.91 Generated concurrent_limiter app
#12 52.93 ==> html_entities
#12 52.93 Compiling 2 files (.ex)
#12 53.18 Generated html_entities app
#12 54.02 ===> Analyzing applications...
#12 54.06 ===> Compiling pot
#12 54.65 ==> ex_const
#12 54.65 Compiling 1 file (.ex)
#12 54.80 Generated ex_const app
#12 54.83 ==> combine
#12 54.83 Compiling 6 files (.ex)
#12 55.49 Generated combine app
#12 55.53 ==> custom_base
#12 55.53 Compiling 1 file (.ex)
#12 55.59 Generated custom_base app
#12 55.62 ==> base62
#12 55.62 Compiling 1 file (.ex)
#12 55.70 Generated base62 app
#12 55.74 ==> telemetry_metrics_prometheus_core
#12 55.74 Compiling 9 files (.ex)
#12 55.97 Generated telemetry_metrics_prometheus_core app
#12 56.00 ==> castore
#12 56.00 Compiling 1 file (.ex)
#12 56.04 Generated castore app
#12 56.10 ==> mint
#12 56.10 Compiling 1 file (.erl)
#12 56.17 Compiling 20 files (.ex)
#12 57.44 Generated mint app
#12 57.49 ==> octo_fetch
#12 57.49 Compiling 3 files (.ex)
#12 57.77 Generated octo_fetch app
#12 57.79 ==> mogrify
#12 57.79 Compiling 9 files (.ex)
#12 58.12 Generated mogrify app
#12 58.14 ==> blurhash
#12 58.14 Compiling 5 files (.ex)
#12 58.22 warning: variable "acc" is unused (if the variable is not meant to be used, prefix it with an underscore)
#12 58.22   lib/blurhash/encoder.ex:31: Blurhash.Encoder.calculate_component/6
#12 58.22 
#12 58.28 Generated blurhash app
#12 58.33 ==> linkify
#12 58.33 Compiling 3 files (.ex)
#12 58.59 Generated linkify app
#12 59.41 ===> Analyzing applications...
#12 59.45 ===> Compiling certifi
#12 60.22 ==> elixir_make
#12 60.22 Compiling 6 files (.ex)
#12 60.45 Generated elixir_make app
#12 60.49 ==> bcrypt_elixir
#12 60.49 mkdir -p /pleroma/_build/prod/lib/bcrypt_elixir/priv
#12 60.50 cc -g -O3 -Wall -Wno-format-truncation -I"/usr/local/lib/erlang/erts-12.3.2.17/include" -Ic_src -fPIC -shared  c_src/bcrypt_nif.c c_src/blowfish.c -o /pleroma/_build/prod/lib/bcrypt_elixir/priv/bcrypt_nif.so
#12 61.20 Compiling 3 files (.ex)
#12 61.31 Generated bcrypt_elixir app
#12 61.36 ==> exile
#12 61.36 mkdir -p priv
#12 61.36 cc -std=c99 -I/usr/local/lib/erlang/usr/include -shared -Wall -Werror -Wextra -Wno-unused-parameter -pedantic -O2 -fPIC -D_POSIX_C_SOURCE=200809L c_src/exile.c -o priv/exile.so
#12 61.57 mkdir -p priv
#12 61.57 cc -std=c99 -Wall -Werror -Wextra -Wno-unused-parameter -pedantic -O2 -fPIC -D_POSIX_C_SOURCE=200809L c_src/spawner.c -o priv/spawner
#12 61.68 Compiling 9 files (.ex)
#12 62.12 Generated exile app
#12 62.15 ==> cc_precompiler
#12 62.15 Compiling 3 files (.ex)
#12 62.39 Generated cc_precompiler app
#12 62.46 ==> vix
#12 62.46 Downloading precompiled NIF to /pleroma/.cache/vix-nif-2.16-x86_64-linux-musl-0.26.0.tar.gz
#12 63.77 Compiling 27 files (.ex)
#12 66.99 Generated vix app
#12 67.91 ===> Analyzing applications...
#12 68.00 ===> Compiling hackney
#12 69.15 ==> tzdata
#12 69.15 Compiling 17 files (.ex)
#12 69.49 warning: unknown compiler variable "______" (expected one of __MODULE__, __ENV__, __DIR__, __CALLER__, __STACKTRACE__)
#12 69.49   lib/tzdata/parser.ex:27: Tzdata.Parser.process_tz_list/1
#12 69.49 
#12 69.56 warning: Supervisor.Spec.worker/2 is deprecated. Use the new child specifications outlined in the Supervisor module instead
#12 69.56 Invalid call found at 2 locations:
#12 69.56   lib/tzdata/tzdata_app.ex:10: Tzdata.App.start/2
#12 69.56   lib/tzdata/tzdata_app.ex:13: Tzdata.App.start/2
#12 69.56 
#12 69.58 warning: :random.uniform/1 is deprecated. Use the 'rand' module instead
#12 69.58   lib/tzdata/data_loader.ex:17: Tzdata.DataLoader.download_new/1
#12 69.58 
#12 69.59 Generated tzdata app
#12 69.61 ==> calendar
#12 69.61 Compiling 18 files (.ex)
#12 70.53 Generated calendar app
#12 70.61 ==> earmark
#12 70.61 Compiling 2 files (.xrl)
#12 70.63 Compiling 1 file (.yrl)
#12 70.68 Compiling 3 files (.erl)
#12 70.86 Compiling 61 files (.ex)
#12 72.72 Generated earmark app
#12 72.76 ==> websock
#12 72.76 Compiling 1 file (.ex)
#12 72.83 Generated websock app
#12 72.87 ==> sweet_xml
#12 72.87 Compiling 2 files (.ex)
#12 73.34 Generated sweet_xml app
#12 73.41 ==> ex_aws
#12 73.41 Compiling 26 files (.ex)
#12 73.43 warning: found ?\ followed by code point 0x20 (space), please use ?\s instead
#12 73.43   lib/ex_aws/request/url.ex:111:25
#12 73.43 
#12 74.06 Generated ex_aws app
#12 74.11 ==> ex_aws_s3
#12 74.11 Compiling 7 files (.ex)
#12 74.65 Generated ex_aws_s3 app
#12 74.70 ==> db_connection
#12 74.70 Compiling 17 files (.ex)
#12 75.78 Generated db_connection app
#12 75.82 ==> httpoison
#12 75.82 Compiling 3 files (.ex)
#12 76.49 Generated httpoison app
#12 76.53 ==> web_push_encryption
#12 76.53 Compiling 6 files (.ex)
#12 76.68 Generated web_push_encryption app
#12 76.76 ==> expo
#12 76.76 Compiling 2 files (.erl)
#12 77.22 Compiling 22 files (.ex)
#12 77.89 Generated expo app
#12 77.93 ==> gettext
#12 77.93 Compiling 17 files (.ex)
#12 78.42 Generated gettext app
#12 78.48 warning: the :gettext compiler is no longer required in your mix.exs.
#12 78.48 
#12 78.48 Please find the following line in your mix.exs and remove the :gettext entry:
#12 78.48 
#12 78.48     compilers: [..., :gettext, ...] ++ Mix.compilers(),
#12 78.48 
#12 78.48   (gettext 0.24.0) lib/mix/tasks/compile.gettext.ex:5: Mix.Tasks.Compile.Gettext.run/1
#12 78.48   (mix 1.13.4) lib/mix/task.ex:397: anonymous fn/3 in Mix.Task.run_task/3
#12 78.48   (mix 1.13.4) lib/mix/tasks/compile.all.ex:92: Mix.Tasks.Compile.All.run_compiler/2
#12 78.48   (mix 1.13.4) lib/mix/tasks/compile.all.ex:72: Mix.Tasks.Compile.All.compile/4
#12 78.48   (mix 1.13.4) lib/mix/tasks/compile.all.ex:59: Mix.Tasks.Compile.All.with_logger_app/2
#12 78.48   (mix 1.13.4) lib/mix/tasks/compile.all.ex:36: Mix.Tasks.Compile.All.run/1
#12 78.48 
#12 78.48 ==> timex
#12 78.48 Compiling 62 files (.ex)
#12 78.92 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.92 For the "bg" locale, you can use the following header:
#12 78.92 
#12 78.92 nplurals=2; plural=(n != 1);
#12 78.92 
#12 78.92   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.92   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 78.92   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 78.92   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.92   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.92   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.92 
#12 78.92 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.92 For the "bg" locale, you can use the following header:
#12 78.92 
#12 78.92 nplurals=2; plural=(n != 1);
#12 78.92 
#12 78.92   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.92   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 78.92   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 78.92   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.92   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.92   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.92 
#12 78.92 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.92 For the "bg" locale, you can use the following header:
#12 78.92 
#12 78.92 nplurals=2; plural=(n != 1);
#12 78.92 
#12 78.92   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.92   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 78.92   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 78.92   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.92   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.92   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.92 
#12 78.92 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.92 For the "bg" locale, you can use the following header:
#12 78.92 
#12 78.92 nplurals=2; plural=(n != 1);
#12 78.92 
#12 78.92   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.92   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 78.92   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 78.92   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.92   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.92   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.92 
#12 78.93 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.93 For the "bg" locale, you can use the following header:
#12 78.93 
#12 78.93 nplurals=2; plural=(n != 1);
#12 78.93 
#12 78.93   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.93   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 78.93   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 78.93   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.93   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.93   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.93 
#12 78.93 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.93 For the "bg" locale, you can use the following header:
#12 78.93 
#12 78.93 nplurals=2; plural=(n != 1);
#12 78.93 
#12 78.93   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.93   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 78.93   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 78.93   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.93   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.93   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.93 
#12 78.93 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.93 For the "bg" locale, you can use the following header:
#12 78.93 
#12 78.93 nplurals=2; plural=(n != 1);
#12 78.93 
#12 78.93   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.93   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 78.93   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 78.93   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.93   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.93   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.93 
#12 78.93 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.93 For the "bg" locale, you can use the following header:
#12 78.93 
#12 78.93 nplurals=2; plural=(n != 1);
#12 78.93 
#12 78.93   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.93   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 78.93   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 78.93   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.93   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.93   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.93 
#12 78.93 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.93 For the "bg" locale, you can use the following header:
#12 78.93 
#12 78.93 nplurals=2; plural=(n != 1);
#12 78.93 
#12 78.93   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.93   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 78.93   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 78.93   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.93   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.93   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.93 
#12 78.94 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.94 For the "bg" locale, you can use the following header:
#12 78.94 
#12 78.94 nplurals=2; plural=(n != 1);
#12 78.94 
#12 78.94   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.94   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.94   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.94 
#12 78.94 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.94 For the "bg" locale, you can use the following header:
#12 78.94 
#12 78.94 nplurals=2; plural=(n != 1);
#12 78.94 
#12 78.94   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.94   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.94   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.94 
#12 78.94 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.94 For the "bg" locale, you can use the following header:
#12 78.94 
#12 78.94 nplurals=2; plural=(n != 1);
#12 78.94 
#12 78.94   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.94   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.94   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.94 
#12 78.94 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.94 For the "bg" locale, you can use the following header:
#12 78.94 
#12 78.94 nplurals=2; plural=(n != 1);
#12 78.94 
#12 78.94   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.94   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.94   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.94 
#12 78.94 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.94 For the "bg" locale, you can use the following header:
#12 78.94 
#12 78.94 nplurals=2; plural=(n != 1);
#12 78.94 
#12 78.94   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.94   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.94   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.94 
#12 78.94 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.94 For the "bg" locale, you can use the following header:
#12 78.94 
#12 78.94 nplurals=2; plural=(n != 1);
#12 78.94 
#12 78.94   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 78.94   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.94   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.94   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.94 
#12 78.95 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.95 For the "bg" locale, you can use the following header:
#12 78.95 
#12 78.95 nplurals=2; plural=(n != 1);
#12 78.95 
#12 78.95   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.95   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 78.95   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 78.95   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.95   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.95   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.95 
#12 78.97 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.97 For the "cs" locale, you can use the following header:
#12 78.97 
#12 78.97 nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;
#12 78.97 
#12 78.97   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.97   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 78.97   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 78.97   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.97   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.97   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.97 
#12 78.97 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.97 For the "cs" locale, you can use the following header:
#12 78.97 
#12 78.97 nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;
#12 78.97 
#12 78.97   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.97   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 78.97   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 78.97   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.97   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.97   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.97 
#12 78.98 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.98 For the "cs" locale, you can use the following header:
#12 78.98 
#12 78.98 nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;
#12 78.98 
#12 78.98   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.98   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.98   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.98 
#12 78.98 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.98 For the "cs" locale, you can use the following header:
#12 78.98 
#12 78.98 nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;
#12 78.98 
#12 78.98   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.98   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.98   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.98 
#12 78.98 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.98 For the "cs" locale, you can use the following header:
#12 78.98 
#12 78.98 nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;
#12 78.98 
#12 78.98   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.98   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.98   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.98 
#12 78.98 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.98 For the "cs" locale, you can use the following header:
#12 78.98 
#12 78.98 nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;
#12 78.98 
#12 78.98   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.98   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.98   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.98 
#12 78.98 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.98 For the "cs" locale, you can use the following header:
#12 78.98 
#12 78.98 nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;
#12 78.98 
#12 78.98   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.98   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.98   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.98 
#12 78.98 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.98 For the "cs" locale, you can use the following header:
#12 78.98 
#12 78.98 nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;
#12 78.98 
#12 78.98   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 78.98   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.98   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.98   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.98 
#12 78.99 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.99 For the "cs" locale, you can use the following header:
#12 78.99 
#12 78.99 nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;
#12 78.99 
#12 78.99   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.99   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 78.99   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 78.99   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.99   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.99   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.99 
#12 78.99 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.99 For the "cs" locale, you can use the following header:
#12 78.99 
#12 78.99 nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;
#12 78.99 
#12 78.99   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.99   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 78.99   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 78.99   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.99   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.99   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.99 
#12 78.99 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.99 For the "cs" locale, you can use the following header:
#12 78.99 
#12 78.99 nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;
#12 78.99 
#12 78.99   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.99   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 78.99   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 78.99   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.99   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.99   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.99 
#12 78.99 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 78.99 For the "cs" locale, you can use the following header:
#12 78.99 
#12 78.99 nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;
#12 78.99 
#12 78.99   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 78.99   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 78.99   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 78.99   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 78.99   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.99   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 78.99 
#12 79.06 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.06 For the "he" locale, you can use the following header:
#12 79.06 
#12 79.06 nplurals=2; plural=(n != 1);
#12 79.06 
#12 79.06   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.06   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 79.06   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 79.06   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.06   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.06   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.06 
#12 79.06 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.06 For the "he" locale, you can use the following header:
#12 79.06 
#12 79.06 nplurals=2; plural=(n != 1);
#12 79.06 
#12 79.06   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.06   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 79.06   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 79.06   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.06   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.06   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.06 
#12 79.06 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.06 For the "he" locale, you can use the following header:
#12 79.06 
#12 79.06 nplurals=2; plural=(n != 1);
#12 79.06 
#12 79.06   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.06   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 79.06   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 79.06   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.06   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.06   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.06 
#12 79.06 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.06 For the "he" locale, you can use the following header:
#12 79.06 
#12 79.06 nplurals=2; plural=(n != 1);
#12 79.06 
#12 79.06   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.06   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 79.06   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 79.06   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.06   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.06   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.06 
#12 79.07 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.07 For the "he" locale, you can use the following header:
#12 79.07 
#12 79.07 nplurals=2; plural=(n != 1);
#12 79.07 
#12 79.07   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.07   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.07   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.07 
#12 79.07 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.07 For the "he" locale, you can use the following header:
#12 79.07 
#12 79.07 nplurals=2; plural=(n != 1);
#12 79.07 
#12 79.07   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.07   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.07   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.07 
#12 79.07 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.07 For the "he" locale, you can use the following header:
#12 79.07 
#12 79.07 nplurals=2; plural=(n != 1);
#12 79.07 
#12 79.07   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.07   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.07   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.07 
#12 79.07 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.07 For the "he" locale, you can use the following header:
#12 79.07 
#12 79.07 nplurals=2; plural=(n != 1);
#12 79.07 
#12 79.07   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.07   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.07   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.07 
#12 79.07 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.07 For the "he" locale, you can use the following header:
#12 79.07 
#12 79.07 nplurals=2; plural=(n != 1);
#12 79.07 
#12 79.07   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.07   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.07   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.07 
#12 79.07 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.07 For the "he" locale, you can use the following header:
#12 79.07 
#12 79.07 nplurals=2; plural=(n != 1);
#12 79.07 
#12 79.07   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 79.07   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.07   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.07   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.07 
#12 79.08 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.08 For the "he" locale, you can use the following header:
#12 79.08 
#12 79.08 nplurals=2; plural=(n != 1);
#12 79.08 
#12 79.08   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.08   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.08   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.08 
#12 79.08 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.08 For the "he" locale, you can use the following header:
#12 79.08 
#12 79.08 nplurals=2; plural=(n != 1);
#12 79.08 
#12 79.08   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.08   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.08   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.08 
#12 79.08 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.08 For the "he" locale, you can use the following header:
#12 79.08 
#12 79.08 nplurals=2; plural=(n != 1);
#12 79.08 
#12 79.08   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.08   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.08   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.08 
#12 79.08 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.08 For the "he" locale, you can use the following header:
#12 79.08 
#12 79.08 nplurals=2; plural=(n != 1);
#12 79.08 
#12 79.08   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.08   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.08   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.08 
#12 79.08 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.08 For the "he" locale, you can use the following header:
#12 79.08 
#12 79.08 nplurals=2; plural=(n != 1);
#12 79.08 
#12 79.08   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.08   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.08   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.08 
#12 79.08 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.08 For the "he" locale, you can use the following header:
#12 79.08 
#12 79.08 nplurals=2; plural=(n != 1);
#12 79.08 
#12 79.08   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 79.08   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.08   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.08   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.08 
#12 79.18 
#12 79.18 22:12:32.464 [error] priv/translations/id/LC_MESSAGES/units.po:24: message is missing plural form 1 which is required by the locale "id"
#12 79.18 
#12 79.18 22:12:32.543 [error] priv/translations/id/LC_MESSAGES/units.po:29: message is missing plural form 1 which is required by the locale "id"
#12 79.18 
#12 79.18 22:12:32.543 [error] priv/translations/id/LC_MESSAGES/units.po:34: message is missing plural form 1 which is required by the locale "id"
#12 79.18 
#12 79.18 22:12:32.543 [error] priv/translations/id/LC_MESSAGES/units.po:39: message is missing plural form 1 which is required by the locale "id"
#12 79.18 
#12 79.18 22:12:32.543 [error] priv/translations/id/LC_MESSAGES/units.po:44: message is missing plural form 1 which is required by the locale "id"
#12 79.18 
#12 79.18 22:12:32.543 [error] priv/translations/id/LC_MESSAGES/units.po:49: message is missing plural form 1 which is required by the locale "id"
#12 79.18 
#12 79.18 22:12:32.543 [error] priv/translations/id/LC_MESSAGES/units.po:54: message is missing plural form 1 which is required by the locale "id"
#12 79.18 
#12 79.18 22:12:32.543 [error] priv/translations/id/LC_MESSAGES/units.po:59: message is missing plural form 1 which is required by the locale "id"
#12 79.18 
#12 79.18 22:12:32.543 [error] priv/translations/id/LC_MESSAGES/units.po:64: message is missing plural form 1 which is required by the locale "id"
#12 79.18 
#12 79.18 22:12:32.543 [error] priv/translations/id/LC_MESSAGES/units.po:69: message is missing plural form 1 which is required by the locale "id"
#12 79.28 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.28 For the "ro" locale, you can use the following header:
#12 79.28 
#12 79.28 nplurals=3; plural=(n==1 ? 0 : (n==0||(n%100>0 && n%100<20)) ? 1 : 2);
#12 79.28 
#12 79.28   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.28   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 79.28   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 79.28   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.28   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.28   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.28 
#12 79.28 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.28 For the "ro" locale, you can use the following header:
#12 79.28 
#12 79.28 nplurals=3; plural=(n==1 ? 0 : (n==0||(n%100>0 && n%100<20)) ? 1 : 2);
#12 79.28 
#12 79.28   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.28   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 79.28   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 79.28   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.28   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.28   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.28 
#12 79.29 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.29 For the "ro" locale, you can use the following header:
#12 79.29 
#12 79.29 nplurals=3; plural=(n==1 ? 0 : (n==0||(n%100>0 && n%100<20)) ? 1 : 2);
#12 79.29 
#12 79.29   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.29   (gettext 0.24.0) lib/gettext/compiler.ex:571: Gettext.Compiler.compile_plural_forms/4
#12 79.29   (gettext 0.24.0) lib/gettext/compiler.ex:509: Gettext.Compiler.compile_po_file/5
#12 79.29   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.29   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.29   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.29 
#12 79.29 warning: Plural-Forms headers in the form "nplurals=<int>" (without the "plural=<rule>" part following) are invalid and support for them will be removed in future Gettext versions. Make sure to use a complete Plural-Forms header, which also specifies the pluralization rules, or remove the Plural-Forms header completely. If you do the latter, Gettext will use its built-in pluralization rules for the languages it knows about (see Gettext.Plural).
#12 79.29 For the "ro" locale, you can use the following header:
#12 79.29 
#12 79.29 nplurals=3; plural=(n==1 ? 0 : (n==0||(n%100>0 && n%100<20)) ? 1 : 2);
#12 79.29 
#12 79.29   (gettext 0.24.0) lib/gettext/plural.ex:280: Gettext.Plural.init/1
#12 79.29   (gettext 0.24.0) lib/gettext/compiler.ex:564: Gettext.Compiler.nplurals/3
#12 79.29   (gettext 0.24.0) lib/gettext/compiler.ex:510: Gettext.Compiler.compile_po_file/5
#12 79.29   (gettext 0.24.0) lib/gettext/compiler.ex:450: Gettext.Compiler.compile_unified_po_file/4
#12 79.29   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.29   (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
#12 79.29 
#12 95.98 Compiling lib/l10n/gettext.ex (it's taking more than 10s)
#12 96.35 Generated timex app
#12 96.41 ==> ecto
#12 96.41 Compiling 56 files (.ex)
#12 101.3 Generated ecto app
#12 101.4 ==> flake_id
#12 101.4 Compiling 5 files (.ex)
#12 101.5 Generated flake_id app
#12 101.6 ==> phoenix_pubsub
#12 101.6 Compiling 11 files (.ex)
#12 102.1 Generated phoenix_pubsub app
#12 103.3 ===> Analyzing applications...
#12 103.4 ===> Compiling cowlib
#12 118.5 ===> Analyzing applications...
#12 118.6 ===> Compiling cowboy
#12 120.9 ===> Analyzing applications...
#12 121.0 ===> Compiling cowboy_telemetry
#12 121.7 ==> inet_cidr
#12 121.7 Compiling 1 file (.ex)
#12 121.9 Generated inet_cidr app
#12 121.9 ==> http_signatures
#12 121.9 Compiling 2 files (.ex)
#12 122.0 Generated http_signatures app
#12 122.1 ==> thousand_island
#12 122.1 Compiling 16 files (.ex)
#12 122.5 Generated thousand_island app
#12 122.6 ==> mime
#12 122.6 Compiling 2 files (.ex)
#12 124.1 Generated mime app
#12 124.1 ==> finch
#12 124.1 Compiling 14 files (.ex)
#12 124.7 Generated finch app
#12 124.8 ==> postgrex
#12 124.8 Compiling 68 files (.ex)
#12 131.1 Generated postgrex app
#12 131.2 ==> ecto_sql
#12 131.2 Compiling 25 files (.ex)
#12 132.7 Generated ecto_sql app
#12 132.8 ==> ecto_enum
#12 132.8 Compiling 5 files (.ex)
#12 133.0 Generated ecto_enum app
#12 133.1 ==> table_rex
#12 133.1 Compiling 7 files (.ex)
#12 133.5 Generated table_rex app
#12 133.5 ==> ecto_psql_extras
#12 133.5 Compiling 33 files (.ex)
#12 134.1 Generated ecto_psql_extras app
#12 134.2 ==> fast_html
#12 134.2 # Sadly, build components separately seems to sporadically fail
#12 134.2 cd c_src/lexbor; \
#12 134.2 	CFLAGS=' ' \
#12 134.2 	cmake -DLEXBOR_BUILD_SEPARATELY=OFF -DLEXBOR_BUILD_SHARED=OFF
#12 134.2 Error relocating /usr/bin/cmake: SSL_get0_group_name: symbol not found
#12 134.2 make: *** [Makefile:49: c_src/lexbor/liblexbor_static.a] Error 127
#12 134.2 could not compile dependency :fast_html, "mix compile" failed. Errors may have been logged above. You can recompile this dependency with "mix deps.compile fast_html", update it with "mix deps.update fast_html" or clean it with "mix deps.clean fast_html"
#12 134.2 ==> pleroma
#12 134.2 ** (Mix) Could not compile with "make" (exit status: 2).
#12 134.2 Please check you have: a C compiler, GNUMake, CMake and Erlang development headers installed before reporting an issue.
#12 ERROR: process "/bin/sh -c echo \"import Mix.Config\" > config/prod.secret.exs     && mix local.hex --force     && mix local.rebar --force     && mix deps.get --only prod     && mkdir release     && mix release --path /pleroma" did not complete successfully: exit code: 1
------
 > [7/8] RUN echo "import Mix.Config" > config/prod.secret.exs     && mix local.hex --force     && mix local.rebar --force     && mix deps.get --only prod     && mkdir release     && mix release --path /pleroma:
134.2 # Sadly, build components separately seems to sporadically fail
134.2 cd c_src/lexbor; \
134.2 	CFLAGS=' ' \
134.2 	cmake -DLEXBOR_BUILD_SEPARATELY=OFF -DLEXBOR_BUILD_SHARED=OFF
134.2 Error relocating /usr/bin/cmake: SSL_get0_group_name: symbol not found
134.2 make: *** [Makefile:49: c_src/lexbor/liblexbor_static.a] Error 127
134.2 could not compile dependency :fast_html, "mix compile" failed. Errors may have been logged above. You can recompile this dependency with "mix deps.compile fast_html", update it with "mix deps.update fast_html" or clean it with "mix deps.clean fast_html"
134.2 ==> pleroma
134.2 ** (Mix) Could not compile with "make" (exit status: 2).
134.2 Please check you have: a C compiler, GNUMake, CMake and Erlang development headers installed before reporting an issue.
------
v2_Dockerfile:30
--------------------
  29 |     
  30 | >>> RUN echo "import Mix.Config" > config/prod.secret.exs \
  31 | >>>     && mix local.hex --force \
  32 | >>>     && mix local.rebar --force \
  33 | >>>     && mix deps.get --only prod \
  34 | >>>     && mkdir release \
  35 | >>>     && mix release --path /pleroma
  36 |     
--------------------
ERROR: failed to solve: process "/bin/sh -c echo \"import Mix.Config\" > config/prod.secret.exs     && mix local.hex --force     && mix local.rebar --force     && mix deps.get --only prod     && mkdir release     && mix release --path /pleroma" did not complete successfully: exit code: 1
Duration: 4:31.45