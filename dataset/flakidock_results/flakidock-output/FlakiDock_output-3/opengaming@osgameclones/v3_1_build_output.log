#0 building with "default" instance using docker driver

#1 [internal] load build definition from v3_Dockerfile
#1 transferring dockerfile:
#1 transferring dockerfile: 573B done
#1 DONE 0.3s

#2 [internal] load .dockerignore
#2 transferring context: 45B done
#2 DONE 0.4s

#3 [internal] load metadata for docker.io/library/alpine:latest
#3 ...

#4 [internal] load metadata for docker.io/library/nginx:1.17-alpine
#4 DONE 1.4s

#3 [internal] load metadata for docker.io/library/alpine:latest
#3 DONE 1.5s

#5 [builder  1/11] FROM docker.io/library/alpine@sha256:0a4eaa0eecf5f8c050e5bba433f58c052be7587ee8af3e8b3910ef9ab5fbe9f5
#5 resolve docker.io/library/alpine@sha256:0a4eaa0eecf5f8c050e5bba433f58c052be7587ee8af3e8b3910ef9ab5fbe9f5
#5 ...

#6 [internal] load build context
#6 transferring context: 837.65kB 0.0s done
#6 DONE 0.3s

#7 [stage-1 1/4] FROM docker.io/library/nginx:1.17-alpine@sha256:763e7f0188e378fef0c761854552c70bbd817555dc4de029681a2e972e25e30e
#7 resolve docker.io/library/nginx:1.17-alpine@sha256:763e7f0188e378fef0c761854552c70bbd817555dc4de029681a2e972e25e30e
#7 resolve docker.io/library/nginx:1.17-alpine@sha256:763e7f0188e378fef0c761854552c70bbd817555dc4de029681a2e972e25e30e 0.5s done
#7 sha256:763e7f0188e378fef0c761854552c70bbd817555dc4de029681a2e972e25e30e 1.41kB / 1.41kB done
#7 sha256:630d39f3970740583f96ec6b26cc7b0f531c35a5c2068c551f02f5236b1e373f 739B / 739B done
#7 sha256:89ec9da682137d6b18ab8244ca263b6771067f251562f884c7510c8f1e5ac910 7.01kB / 7.01kB done
#7 sha256:cbdbe7a5bc2a134ca8ec91be58565ec07d037386d1f1d8385412d224deafca08 0B / 2.81MB 0.2s
#7 sha256:c554c602ff329d94bcb532a7f3c97c27af3abcbb678bdd809e4e894135bb88c9 0B / 5.77MB 0.2s
#7 sha256:cbdbe7a5bc2a134ca8ec91be58565ec07d037386d1f1d8385412d224deafca08 1.05MB / 2.81MB 0.3s
#7 sha256:cbdbe7a5bc2a134ca8ec91be58565ec07d037386d1f1d8385412d224deafca08 2.81MB / 2.81MB 0.4s
#7 sha256:c554c602ff329d94bcb532a7f3c97c27af3abcbb678bdd809e4e894135bb88c9 5.24MB / 5.77MB 0.4s
#7 extracting sha256:cbdbe7a5bc2a134ca8ec91be58565ec07d037386d1f1d8385412d224deafca08
#7 sha256:cbdbe7a5bc2a134ca8ec91be58565ec07d037386d1f1d8385412d224deafca08 2.81MB / 2.81MB 0.4s done
#7 sha256:c554c602ff329d94bcb532a7f3c97c27af3abcbb678bdd809e4e894135bb88c9 5.77MB / 5.77MB 0.5s
#7 extracting sha256:cbdbe7a5bc2a134ca8ec91be58565ec07d037386d1f1d8385412d224deafca08 0.2s done
#7 sha256:c554c602ff329d94bcb532a7f3c97c27af3abcbb678bdd809e4e894135bb88c9 5.77MB / 5.77MB 0.6s done
#7 extracting sha256:c554c602ff329d94bcb532a7f3c97c27af3abcbb678bdd809e4e894135bb88c9
#7 ...

#5 [builder  1/11] FROM docker.io/library/alpine@sha256:0a4eaa0eecf5f8c050e5bba433f58c052be7587ee8af3e8b3910ef9ab5fbe9f5
#5 resolve docker.io/library/alpine@sha256:0a4eaa0eecf5f8c050e5bba433f58c052be7587ee8af3e8b3910ef9ab5fbe9f5 0.5s done
#5 sha256:0a4eaa0eecf5f8c050e5bba433f58c052be7587ee8af3e8b3910ef9ab5fbe9f5 1.85kB / 1.85kB done
#5 sha256:eddacbc7e24bf8799a4ed3cdcfa50d4b88a323695ad80f317b6629883b2c2a78 528B / 528B done
#5 sha256:324bc02ae1231fd9255658c128086395d3fa0aedd5a41ab6b034fd649d1a9260 1.47kB / 1.47kB done
#5 sha256:c6a83fedfae6ed8a4f5f7cbb6a7b6f1c1ec3d86fea8cb9e5ba2e5e6673fde9f6 3.62MB / 3.62MB 0.3s done
#5 extracting sha256:c6a83fedfae6ed8a4f5f7cbb6a7b6f1c1ec3d86fea8cb9e5ba2e5e6673fde9f6 0.3s done
#5 DONE 1.7s

#7 [stage-1 1/4] FROM docker.io/library/nginx:1.17-alpine@sha256:763e7f0188e378fef0c761854552c70bbd817555dc4de029681a2e972e25e30e
#7 extracting sha256:c554c602ff329d94bcb532a7f3c97c27af3abcbb678bdd809e4e894135bb88c9 0.4s done
#7 ...

#8 [builder  2/11] RUN mkdir /src /app
#8 DONE 1.7s

#7 [stage-1 1/4] FROM docker.io/library/nginx:1.17-alpine@sha256:763e7f0188e378fef0c761854552c70bbd817555dc4de029681a2e972e25e30e
#7 DONE 3.5s

#9 [builder  3/11] WORKDIR /src
#9 DONE 0.3s

#10 [builder  4/11] COPY . /src/
#10 DONE 0.4s

#11 [builder  5/11] COPY CHECKS /app/CHECKS
#11 DONE 0.3s

#12 [builder  6/11] RUN apk add --no-cache curl make gcc musl-dev libffi-dev python3 python3-dev
#12 0.561 fetch https://dl-cdn.alpinelinux.org/alpine/v3.20/main/x86_64/APKINDEX.tar.gz
#12 0.798 fetch https://dl-cdn.alpinelinux.org/alpine/v3.20/community/x86_64/APKINDEX.tar.gz
#12 1.287 (1/42) Installing ca-certificates (20240705-r0)
#12 1.312 (2/42) Installing brotli-libs (1.1.0-r2)
#12 1.338 (3/42) Installing c-ares (1.28.1-r0)
#12 1.355 (4/42) Installing libunistring (1.2-r0)
#12 1.377 (5/42) Installing libidn2 (2.3.7-r0)
#12 1.390 (6/42) Installing nghttp2-libs (1.62.1-r0)
#12 1.396 (7/42) Installing libpsl (0.21.5-r1)
#12 1.400 (8/42) Installing zstd-libs (1.5.6-r0)
#12 1.412 (9/42) Installing libcurl (8.9.0-r0)
#12 1.423 (10/42) Installing curl (8.9.0-r0)
#12 1.429 (11/42) Installing libgcc (13.2.1_git20240309-r0)
#12 1.435 (12/42) Installing jansson (2.14-r4)
#12 1.439 (13/42) Installing libstdc++ (13.2.1_git20240309-r0)
#12 1.465 (14/42) Installing binutils (2.42-r0)
#12 1.563 (15/42) Installing libgomp (13.2.1_git20240309-r0)
#12 1.570 (16/42) Installing libatomic (13.2.1_git20240309-r0)
#12 1.602 (17/42) Installing gmp (6.3.0-r1)
#12 1.615 (18/42) Installing isl26 (0.26-r1)
#12 1.640 (19/42) Installing mpfr4 (4.2.1-r0)
#12 1.651 (20/42) Installing mpc1 (1.3.1-r1)
#12 1.657 (21/42) Installing gcc (13.2.1_git20240309-r0)
#12 2.840 (22/42) Installing linux-headers (6.6-r0)
#12 3.025 (23/42) Installing libffi (3.4.6-r0)
#12 3.032 (24/42) Installing pkgconf (2.2.0-r0)
#12 3.037 (25/42) Installing libffi-dev (3.4.6-r0)
#12 3.043 (26/42) Installing make (4.4.1-r2)
#12 3.050 (27/42) Installing musl-dev (1.2.5-r0)
#12 3.163 (28/42) Installing libbz2 (1.0.8-r6)
#12 3.167 (29/42) Installing libexpat (2.6.2-r0)
#12 3.172 (30/42) Installing gdbm (1.23-r1)
#12 3.176 (31/42) Installing xz-libs (5.6.1-r3)
#12 3.182 (32/42) Installing mpdecimal (4.0.0-r0)
#12 3.188 (33/42) Installing ncurses-terminfo-base (6.4_p20240420-r0)
#12 3.222 (34/42) Installing libncursesw (6.4_p20240420-r0)
#12 3.229 (35/42) Installing libpanelw (6.4_p20240420-r0)
#12 3.233 (36/42) Installing readline (8.2.10-r0)
#12 3.241 (37/42) Installing sqlite-libs (3.45.3-r1)
#12 3.263 (38/42) Installing python3 (3.12.3-r1)
#12 3.573 (39/42) Installing python3-pycache-pyc0 (3.12.3-r1)
#12 3.834 (40/42) Installing pyc (3.12.3-r1)
#12 3.836 (41/42) Installing python3-pyc (3.12.3-r1)
#12 3.839 (42/42) Installing python3-dev (3.12.3-r1)
#12 4.643 Executing busybox-1.36.1-r29.trigger
#12 4.648 Executing ca-certificates-20240705-r0.trigger
#12 4.694 OK: 302 MiB in 56 packages
#12 DONE 10.4s

#13 [builder  7/11] RUN env
#13 0.639 SHLVL=1
#13 0.639 HOME=/root
#13 0.639 PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
#13 0.639 PWD=/src
#13 DONE 0.8s

#14 [builder  8/11] RUN curl -sSL https://install.python-poetry.org | POETRY_HOME=/etc/poetry python3 -
#14 25.29 Retrieving Poetry metadata
#14 25.29 
#14 25.29 # Welcome to Poetry!
#14 25.29 
#14 25.29 This will download and install the latest version of Poetry,
#14 25.29 a dependency and package manager for Python.
#14 25.29 
#14 25.29 It will add the `poetry` command to Poetry's bin directory, located at:
#14 25.29 
#14 25.29 /etc/poetry/bin
#14 25.29 
#14 25.29 You can uninstall at any time by executing this script with the --uninstall option,
#14 25.29 and these changes will be reverted.
#14 25.29 
#14 25.29 Installing Poetry (1.8.3)
#14 25.29 Installing Poetry (1.8.3): Creating environment
#14 25.29 Installing Poetry (1.8.3): Installing Poetry
#14 25.29 Installing Poetry (1.8.3): Creating script
#14 25.29 Installing Poetry (1.8.3): Done
#14 25.29 
#14 25.29 Poetry (1.8.3) is installed now. Great!
#14 25.29 
#14 25.29 To get started you need Poetry's bin directory (/etc/poetry/bin) in your `PATH`
#14 25.29 environment variable.
#14 25.29 
#14 25.29 Add `export PATH="/etc/poetry/bin:$PATH"` to your shell configuration file.
#14 25.29 
#14 25.29 Alternatively, you can call Poetry explicitly with `/etc/poetry/bin/poetry`.
#14 25.29 
#14 25.29 You can test that everything is set up by executing:
#14 25.29 
#14 25.29 `poetry --version`
#14 25.29 
#14 DONE 27.1s

#15 [builder  9/11] RUN python3 -m venv /src/venv
#15 DONE 7.1s

#16 [builder 10/11] RUN . /src/venv/bin/activate && poetry install
#16 1.428 Installing dependencies from lock file
#16 1.528 
#16 1.528 pyproject.toml changed significantly since poetry.lock was last generated. Run `poetry lock [--no-update]` to fix the lock file.
#16 ERROR: process "/bin/sh -c . /src/venv/bin/activate && poetry install" did not complete successfully: exit code: 1
------
 > [builder 10/11] RUN . /src/venv/bin/activate && poetry install:
1.428 Installing dependencies from lock file
1.528 
1.528 pyproject.toml changed significantly since poetry.lock was last generated. Run `poetry lock [--no-update]` to fix the lock file.
------
v3_Dockerfile:15
--------------------
  13 |     
  14 |     RUN python3 -m venv /src/venv
  15 | >>> RUN . /src/venv/bin/activate && poetry install
  16 |     RUN make run 
  17 |     
--------------------
ERROR: failed to solve: process "/bin/sh -c . /src/venv/bin/activate && poetry install" did not complete successfully: exit code: 1
Duration: 0:54.32