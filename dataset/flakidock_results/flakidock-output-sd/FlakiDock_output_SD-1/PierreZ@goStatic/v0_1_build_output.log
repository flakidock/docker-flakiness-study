#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 30B
#1 transferring dockerfile: 1.06kB done
#1 DONE 0.5s

#2 [internal] load .dockerignore
#2 transferring context: 2B done
#2 DONE 0.4s

#3 [internal] load metadata for docker.io/library/golang:latest
#3 ...

#4 [auth] library/golang:pull token for registry-1.docker.io
#4 DONE 0.0s

#3 [internal] load metadata for docker.io/library/golang:latest
#3 DONE 1.4s

#5 [internal] load build context
#5 DONE 0.0s

#6 [builder 1/4] FROM docker.io/library/golang:latest@sha256:86a3c48a61915a8c62c0e1d7594730399caa3feb73655dfe96c7bc17710e96cf
#6 resolve docker.io/library/golang:latest@sha256:86a3c48a61915a8c62c0e1d7594730399caa3feb73655dfe96c7bc17710e96cf 0.1s done
#6 sha256:86a3c48a61915a8c62c0e1d7594730399caa3feb73655dfe96c7bc17710e96cf 9.74kB / 9.74kB done
#6 sha256:a07daa84ec6c320c62f1fddb40b84698de004aac1c5ceb28243d674952d536f3 2.32kB / 2.32kB done
#6 sha256:a61b645b609b758e4c0a9c57efbba8ccc610abb4d96544cedd8411aa1c9e4b09 2.82kB / 2.82kB done
#6 sha256:10d643a5fa823cd013a108b2076f4d2edf1b2a921f863b533e83ea5ed8d09bd4 1.05MB / 64.14MB 0.2s
#6 sha256:ca4e5d6727252f0dbc207fbf283cb95e278bf562bda42d35ce6c919583a110a0 0B / 49.55MB 0.2s
#6 ...

#5 [internal] load build context
#5 transferring context: 7.99MB 0.1s done
#5 DONE 0.4s

#6 [builder 1/4] FROM docker.io/library/golang:latest@sha256:86a3c48a61915a8c62c0e1d7594730399caa3feb73655dfe96c7bc17710e96cf
#6 sha256:10d643a5fa823cd013a108b2076f4d2edf1b2a921f863b533e83ea5ed8d09bd4 6.29MB / 64.14MB 0.4s
#6 sha256:ca4e5d6727252f0dbc207fbf283cb95e278bf562bda42d35ce6c919583a110a0 6.29MB / 49.55MB 0.4s
#6 sha256:30b93c12a9c9326732b35d9e3ebe57148abe33f8fa6e25ab76867410b0ccf876 0B / 24.05MB 0.4s
#6 sha256:10d643a5fa823cd013a108b2076f4d2edf1b2a921f863b533e83ea5ed8d09bd4 12.58MB / 64.14MB 0.6s
#6 sha256:ca4e5d6727252f0dbc207fbf283cb95e278bf562bda42d35ce6c919583a110a0 15.73MB / 49.55MB 0.6s
#6 sha256:30b93c12a9c9326732b35d9e3ebe57148abe33f8fa6e25ab76867410b0ccf876 5.24MB / 24.05MB 0.6s
#6 sha256:10d643a5fa823cd013a108b2076f4d2edf1b2a921f863b533e83ea5ed8d09bd4 19.92MB / 64.14MB 0.8s
#6 sha256:ca4e5d6727252f0dbc207fbf283cb95e278bf562bda42d35ce6c919583a110a0 25.17MB / 49.55MB 0.8s
#6 sha256:30b93c12a9c9326732b35d9e3ebe57148abe33f8fa6e25ab76867410b0ccf876 12.58MB / 24.05MB 0.8s
#6 sha256:ca4e5d6727252f0dbc207fbf283cb95e278bf562bda42d35ce6c919583a110a0 29.36MB / 49.55MB 0.9s
#6 sha256:30b93c12a9c9326732b35d9e3ebe57148abe33f8fa6e25ab76867410b0ccf876 17.83MB / 24.05MB 0.9s
#6 sha256:10d643a5fa823cd013a108b2076f4d2edf1b2a921f863b533e83ea5ed8d09bd4 30.41MB / 64.14MB 1.1s
#6 sha256:ca4e5d6727252f0dbc207fbf283cb95e278bf562bda42d35ce6c919583a110a0 37.75MB / 49.55MB 1.1s
#6 sha256:30b93c12a9c9326732b35d9e3ebe57148abe33f8fa6e25ab76867410b0ccf876 24.05MB / 24.05MB 1.1s
#6 sha256:10d643a5fa823cd013a108b2076f4d2edf1b2a921f863b533e83ea5ed8d09bd4 35.65MB / 64.14MB 1.2s
#6 sha256:ca4e5d6727252f0dbc207fbf283cb95e278bf562bda42d35ce6c919583a110a0 41.94MB / 49.55MB 1.2s
#6 sha256:10d643a5fa823cd013a108b2076f4d2edf1b2a921f863b533e83ea5ed8d09bd4 47.19MB / 64.14MB 1.4s
#6 sha256:ca4e5d6727252f0dbc207fbf283cb95e278bf562bda42d35ce6c919583a110a0 49.55MB / 49.55MB 1.4s
#6 sha256:10d643a5fa823cd013a108b2076f4d2edf1b2a921f863b533e83ea5ed8d09bd4 59.77MB / 64.14MB 1.6s
#6 sha256:30b93c12a9c9326732b35d9e3ebe57148abe33f8fa6e25ab76867410b0ccf876 24.05MB / 24.05MB 1.4s done
#6 sha256:10d643a5fa823cd013a108b2076f4d2edf1b2a921f863b533e83ea5ed8d09bd4 64.14MB / 64.14MB 1.7s
#6 sha256:ca4e5d6727252f0dbc207fbf283cb95e278bf562bda42d35ce6c919583a110a0 49.55MB / 49.55MB 2.2s done
#6 extracting sha256:ca4e5d6727252f0dbc207fbf283cb95e278bf562bda42d35ce6c919583a110a0
#6 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 0B / 92.23MB 2.3s
#6 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 11.53MB / 92.23MB 2.6s
#6 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 19.92MB / 92.23MB 2.7s
#6 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 28.31MB / 92.23MB 2.8s
#6 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 36.70MB / 92.23MB 2.9s
#6 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 42.99MB / 92.23MB 3.0s
#6 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 50.33MB / 92.23MB 3.1s
#6 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 55.57MB / 92.23MB 3.2s
#6 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 61.87MB / 92.23MB 3.3s
#6 sha256:10d643a5fa823cd013a108b2076f4d2edf1b2a921f863b533e83ea5ed8d09bd4 64.14MB / 64.14MB 3.3s done
#6 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 69.21MB / 92.23MB 3.4s
#6 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 75.50MB / 92.23MB 3.6s
#6 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 5.76MB / 69.35MB 3.6s
#6 sha256:ddb1467b736f6b84ad01493f98b050ed46efd37c54e4307fffc56ed028fdeab6 126B / 126B 3.6s
#6 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 11.53MB / 69.35MB 3.7s
#6 sha256:ddb1467b736f6b84ad01493f98b050ed46efd37c54e4307fffc56ed028fdeab6 126B / 126B 3.6s done
#6 sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1 0B / 32B 3.7s
#6 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 18.87MB / 69.35MB 3.8s
#6 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 81.79MB / 92.23MB 3.9s
#6 sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1 32B / 32B 3.8s done
#6 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 87.03MB / 92.23MB 4.0s
#6 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 25.17MB / 69.35MB 4.0s
#6 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 31.46MB / 69.35MB 4.1s
#6 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 92.23MB / 92.23MB 4.2s
#6 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 36.70MB / 69.35MB 4.2s
#6 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 45.09MB / 69.35MB 4.3s
#6 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 49.28MB / 69.35MB 4.4s
#6 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 58.72MB / 69.35MB 4.6s
#6 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 69.35MB / 69.35MB 4.8s
#6 extracting sha256:ca4e5d6727252f0dbc207fbf283cb95e278bf562bda42d35ce6c919583a110a0 2.8s done
#6 sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 92.23MB / 92.23MB 5.6s done
#6 sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 69.35MB / 69.35MB 7.8s done
#6 extracting sha256:30b93c12a9c9326732b35d9e3ebe57148abe33f8fa6e25ab76867410b0ccf876 0.1s
#6 extracting sha256:30b93c12a9c9326732b35d9e3ebe57148abe33f8fa6e25ab76867410b0ccf876 1.1s done
#6 extracting sha256:10d643a5fa823cd013a108b2076f4d2edf1b2a921f863b533e83ea5ed8d09bd4
#6 extracting sha256:10d643a5fa823cd013a108b2076f4d2edf1b2a921f863b533e83ea5ed8d09bd4 4.0s done
#6 extracting sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca
#6 extracting sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 5.1s
#6 extracting sha256:5e53f8e7a11a56a5e15226ca5d9a2f740b0e5aa702ca2616748207531fee32ca 5.2s done
#6 extracting sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f
#6 extracting sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 5.0s
#6 extracting sha256:32a2f51ff3dde07bfa1ce35b5597b2d97295e64a461d98e696feda7b25a6dc5f 6.9s done
#6 extracting sha256:ddb1467b736f6b84ad01493f98b050ed46efd37c54e4307fffc56ed028fdeab6
#6 extracting sha256:ddb1467b736f6b84ad01493f98b050ed46efd37c54e4307fffc56ed028fdeab6 done
#6 extracting sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1
#6 extracting sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1 done
#6 DONE 28.5s

#7 [builder 2/4] WORKDIR /go/src/github.com/PierreZ/goStatic
#7 DONE 20.8s

#8 [builder 3/4] COPY . .
#8 DONE 0.5s

#9 [builder 4/4] RUN mkdir ./bin &&     apt-get update && apt-get install -y upx &&     GOOS=$(echo linux/amd64 | cut -f1 -d/) &&     GOARCH=$(echo linux/amd64 | cut -f2 -d/) &&     GOARM=$(echo linux/amd64 | cut -f3 -d/ | sed "s/v//" ) &&     CGO_ENABLED=0 GOOS=${GOOS} GOARCH=${GOARCH} GOARM=${GOARM} go build ${BUILD_ARGS} -ldflags="-s" -tags netgo -installsuffix netgo -o ./bin/goStatic &&     mkdir ./bin/etc &&     ID=$(shuf -i 100-9999 -n 1) &&     upx -9 ./bin/goStatic &&     echo $ID &&     echo "appuser:x:$ID:$ID::/sbin/nologin:/bin/false" > ./bin/etc/passwd &&     echo "appgroup:x:$ID:appuser" > ./bin/etc/group
#9 2.774 Get:1 http://deb.debian.org/debian bookworm InRelease [151 kB]
#9 2.806 Get:2 http://deb.debian.org/debian bookworm-updates InRelease [55.4 kB]
#9 2.817 Get:3 http://deb.debian.org/debian-security bookworm-security InRelease [48.0 kB]
#9 2.900 Get:4 http://deb.debian.org/debian bookworm/main amd64 Packages [8788 kB]
#9 3.016 Get:5 http://deb.debian.org/debian bookworm-updates/main amd64 Packages [13.8 kB]
#9 3.042 Get:6 http://deb.debian.org/debian-security bookworm-security/main amd64 Packages [169 kB]
#9 4.322 Fetched 9225 kB in 2s (5866 kB/s)
#9 4.322 Reading package lists...
#9 5.012 Reading package lists...
#9 5.699 Building dependency tree...
#9 5.828 Reading state information...
#9 5.838 E: Unable to locate package upx
#9 ERROR: process "/bin/sh -c mkdir ./bin &&     apt-get update && apt-get install -y upx &&     GOOS=$(echo $TARGETPLATFORM | cut -f1 -d/) &&     GOARCH=$(echo $TARGETPLATFORM | cut -f2 -d/) &&     GOARM=$(echo $TARGETPLATFORM | cut -f3 -d/ | sed \"s/v//\" ) &&     CGO_ENABLED=0 GOOS=${GOOS} GOARCH=${GOARCH} GOARM=${GOARM} go build ${BUILD_ARGS} -ldflags=\"-s\" -tags netgo -installsuffix netgo -o ./bin/goStatic &&     mkdir ./bin/etc &&     ID=$(shuf -i 100-9999 -n 1) &&     upx -9 ./bin/goStatic &&     echo $ID &&     echo \"appuser:x:$ID:$ID::/sbin/nologin:/bin/false\" > ./bin/etc/passwd &&     echo \"appgroup:x:$ID:appuser\" > ./bin/etc/group" did not complete successfully: exit code: 100
------
 > [builder 4/4] RUN mkdir ./bin &&     apt-get update && apt-get install -y upx &&     GOOS=$(echo linux/amd64 | cut -f1 -d/) &&     GOARCH=$(echo linux/amd64 | cut -f2 -d/) &&     GOARM=$(echo linux/amd64 | cut -f3 -d/ | sed "s/v//" ) &&     CGO_ENABLED=0 GOOS=${GOOS} GOARCH=${GOARCH} GOARM=${GOARM} go build ${BUILD_ARGS} -ldflags="-s" -tags netgo -installsuffix netgo -o ./bin/goStatic &&     mkdir ./bin/etc &&     ID=$(shuf -i 100-9999 -n 1) &&     upx -9 ./bin/goStatic &&     echo $ID &&     echo "appuser:x:$ID:$ID::/sbin/nologin:/bin/false" > ./bin/etc/passwd &&     echo "appgroup:x:$ID:appuser" > ./bin/etc/group:
2.774 Get:1 http://deb.debian.org/debian bookworm InRelease [151 kB]
2.806 Get:2 http://deb.debian.org/debian bookworm-updates InRelease [55.4 kB]
2.817 Get:3 http://deb.debian.org/debian-security bookworm-security InRelease [48.0 kB]
2.900 Get:4 http://deb.debian.org/debian bookworm/main amd64 Packages [8788 kB]
3.016 Get:5 http://deb.debian.org/debian bookworm-updates/main amd64 Packages [13.8 kB]
3.042 Get:6 http://deb.debian.org/debian-security bookworm-security/main amd64 Packages [169 kB]



5.838 E: Unable to locate package upx
------

 [33m1 warning found (use --debug to expand):
[0m - Empty continuation line found in: RUN mkdir ./bin &&     apt-get update && apt-get install -y upx &&     GOOS=$(echo $TARGETPLATFORM | cut -f1 -d/) &&     GOARCH=$(echo $TARGETPLATFORM | cut -f2 -d/) &&     GOARM=$(echo $TARGETPLATFORM | cut -f3 -d/ | sed "s/v//" ) &&     CGO_ENABLED=0 GOOS=${GOOS} GOARCH=${GOARCH} GOARM=${GOARM} go build ${BUILD_ARGS} -ldflags="-s" -tags netgo -installsuffix netgo -o ./bin/goStatic &&     mkdir ./bin/etc &&     ID=$(shuf -i 100-9999 -n 1) &&     upx -9 ./bin/goStatic &&     echo $ID &&     echo "appuser:x:$ID:$ID::/sbin/nologin:/bin/false" > ./bin/etc/passwd &&     echo "appgroup:x:$ID:appuser" > ./bin/etc/group
Dockerfile:9
--------------------
   8 |     
   9 | >>> RUN mkdir ./bin && \
  10 | >>>     apt-get update && apt-get install -y upx && \
  11 | >>> 
  12 | >>>     # getting right vars from docker buildx
  13 | >>>     # especially to handle linux/arm/v6 for example
  14 | >>>     GOOS=$(echo $TARGETPLATFORM | cut -f1 -d/) && \
  15 | >>>     GOARCH=$(echo $TARGETPLATFORM | cut -f2 -d/) && \
  16 | >>>     GOARM=$(echo $TARGETPLATFORM | cut -f3 -d/ | sed "s/v//" ) && \
  17 | >>> 
  18 | >>>     CGO_ENABLED=0 GOOS=${GOOS} GOARCH=${GOARCH} GOARM=${GOARM} go build ${BUILD_ARGS} -ldflags="-s" -tags netgo -installsuffix netgo -o ./bin/goStatic && \
  19 | >>> 
  20 | >>>     mkdir ./bin/etc && \
  21 | >>>     ID=$(shuf -i 100-9999 -n 1) && \
  22 | >>>     upx -9 ./bin/goStatic && \
  23 | >>>     echo $ID && \
  24 | >>>     echo "appuser:x:$ID:$ID::/sbin/nologin:/bin/false" > ./bin/etc/passwd && \
  25 | >>>     echo "appgroup:x:$ID:appuser" > ./bin/etc/group
  26 |     
--------------------
ERROR: failed to solve: process "/bin/sh -c mkdir ./bin &&     apt-get update && apt-get install -y upx &&     GOOS=$(echo $TARGETPLATFORM | cut -f1 -d/) &&     GOARCH=$(echo $TARGETPLATFORM | cut -f2 -d/) &&     GOARM=$(echo $TARGETPLATFORM | cut -f3 -d/ | sed \"s/v//\" ) &&     CGO_ENABLED=0 GOOS=${GOOS} GOARCH=${GOARCH} GOARM=${GOARM} go build ${BUILD_ARGS} -ldflags=\"-s\" -tags netgo -installsuffix netgo -o ./bin/goStatic &&     mkdir ./bin/etc &&     ID=$(shuf -i 100-9999 -n 1) &&     upx -9 ./bin/goStatic &&     echo $ID &&     echo \"appuser:x:$ID:$ID::/sbin/nologin:/bin/false\" > ./bin/etc/passwd &&     echo \"appgroup:x:$ID:appuser\" > ./bin/etc/group" did not complete successfully: exit code: 100
Duration: 0:58.67