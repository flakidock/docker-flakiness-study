
Below is the flaky Dockerfile:

# Dockerfile
```# stage 0
FROM --platform=$BUILDPLATFORM golang:latest as builder

ARG TARGETPLATFORM

WORKDIR /go/src/github.com/PierreZ/goStatic
COPY . .

RUN mkdir ./bin && \
    apt-get update && apt-get install -y upx && \

    # getting right vars from docker buildx
    # especially to handle linux/arm/v6 for example
    GOOS=$(echo $TARGETPLATFORM | cut -f1 -d/) && \
    GOARCH=$(echo $TARGETPLATFORM | cut -f2 -d/) && \
    GOARM=$(echo $TARGETPLATFORM | cut -f3 -d/ | sed "s/v//" ) && \

    CGO_ENABLED=0 GOOS=${GOOS} GOARCH=${GOARCH} GOARM=${GOARM} go build ${BUILD_ARGS} -ldflags="-s" -tags netgo -installsuffix netgo -o ./bin/goStatic && \

    mkdir ./bin/etc && \
    ID=$(shuf -i 100-9999 -n 1) && \
    upx -9 ./bin/goStatic && \
    echo $ID && \
    echo "appuser:x:$ID:$ID::/sbin/nologin:/bin/false" > ./bin/etc/passwd && \
    echo "appgroup:x:$ID:appuser" > ./bin/etc/group

# stage 1
FROM scratch
WORKDIR /
COPY --from=builder /go/src/github.com/PierreZ/goStatic/bin/ .
USER appuser
ENTRYPOINT ["/goStatic"]
 
```

And below is the build error that occurred when trying to build the Dockerfile:
# Build Error
```> [builder 4/4] RUN mkdir ./bin &&     apt-get update && apt-get install -y upx &&     GOOS=$(echo linux/amd64 | cut -f1 -d/) &&     GOARCH=$(echo linux/amd64 | cut -f2 -d/) &&     GOARM=$(echo linux/amd64 | cut -f3 -d/ | sed "s/v//" ) &&     CGO_ENABLED=0 GOOS=${GOOS} GOARCH=${GOARCH} GOARM=${GOARM} go build ${BUILD_ARGS} -ldflags="-s" -tags netgo -installsuffix netgo -o ./bin/goStatic &&     mkdir ./bin/etc &&     ID=$(shuf -i 100-9999 -n 1) &&     upx -9 ./bin/goStatic &&     echo $ID &&     echo "appuser:x:$ID:$ID::/sbin/nologin:/bin/false" > ./bin/etc/passwd &&     echo "appgroup:x:$ID:appuser" > ./bin/etc/group:
Get:1 http://deb.debian.org/debian bookworm InRelease [151 kB]
Get:2 http://deb.debian.org/debian bookworm-updates InRelease [kB]
Get:3 http://deb.debian.org/debian-security bookworm-security InRelease [kB]
Get:4 http://deb.debian.org/debian bookworm/main amd64 Packages [8788 kB]
Get:5 http://deb.debian.org/debian bookworm-updates/main amd64 Packages [kB]
Get:6 http://deb.debian.org/debian-security bookworm-security/main amd64 Packages [169 kB]
E: Unable to locate package upx
ERROR: process "/bin/sh -c mkdir ./bin &&     apt-get update && apt-get install -y upx &&     GOOS=$(echo $TARGETPLATFORM | cut -f1 -d/) &&     GOARCH=$(echo $TARGETPLATFORM | cut -f2 -d/) &&     GOARM=$(echo $TARGETPLATFORM | cut -f3 -d/ | sed \"s/v//\" ) &&     CGO_ENABLED=0 GOOS=${GOOS} GOARCH=${GOARCH} GOARM=${GOARM} go build ${BUILD_ARGS} -ldflags=\"-s\" -tags netgo -installsuffix netgo -o ./bin/goStatic &&     mkdir ./bin/etc &&     ID=$(shuf -i 100-9999 -n 1) &&     upx -9 ./bin/goStatic &&     echo $ID &&     echo \"appuser:x:$ID:$ID::/sbin/nologin:/bin/false\" > ./bin/etc/passwd &&     echo \"appgroup:x:$ID:appuser\" > ./bin/etc/group" did not complete successfully: exit code: 100```

Your task is to repair the Dockerfile based on the Dockerfile and its build error provided. To solve the problem, first, you should diagnose which part is causing the flakiness and why. Then, according to the characteristics of that flakiness, repair the Dockerfile. the output Dockerfile must be within five angle brackets:
    <<<<<
    Dockerfile content 
    >>>>>
