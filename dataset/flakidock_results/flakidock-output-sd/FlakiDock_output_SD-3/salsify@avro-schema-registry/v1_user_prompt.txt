
Below is the flaky Dockerfile:

# Dockerfile
```# To build run: docker build -t avro-schema-registry .

FROM ruby:2.7.5

RUN mkdir /app
WORKDIR /app

# Copy the Gemfile as well as the Gemfile.lock and install
# the RubyGems. This is a separate step so the dependencies
# will be cached unless changes to one of those two files
# are made.
COPY Gemfile Gemfile.lock ./
RUN gem install bundler --no-document && bundle install --jobs 20 --retry 5

COPY . /app

# Run the app as a non-root user. The source code will be read-only,
# but the process will complain if it can't write to tmp or log (even
# though we're writing the logs to STDOUT).
RUN mkdir /app/tmp /app/log
RUN groupadd --system avro && \
    useradd --no-log-init --system --create-home --gid avro avro && \
    chown -R avro:avro /app/tmp /app/log
USER avro

ENV RACK_ENV=production
ENV RAILS_ENV=production
ENV RAILS_LOG_TO_STDOUT=true
ENV PORT=5000

EXPOSE $PORT

# Start puma
CMD bin/docker_start
```

And below is the build error that occurred when trying to build the Dockerfile:
# Build Error
```> [5/8] RUN gem install bundler --no-document && bundle install --jobs 20 --retry 5:
ERROR:  Error installing bundler:
	The last version of bundler (>= 0) to support your Ruby & RubyGems was 2.4.22. Try installing it with `gem install bundler -v 2.4.22`
	bundler requires Ruby version >= 3.0.0. The current ruby version is 2.7.5.203.
ERROR: process "/bin/sh -c gem install bundler --no-document && bundle install --jobs 20 --retry 5" did not complete successfully: exit code: 1```

Your task is to repair the Dockerfile based on the Dockerfile and its build error provided. To solve the problem, first, you should diagnose which part is causing the flakiness and why. Then, according to the characteristics of that flakiness, repair the Dockerfile. the output Dockerfile must be within five angle brackets:
    <<<<<
    Dockerfile content 
    >>>>>
