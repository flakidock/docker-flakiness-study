
Below is the flaky Dockerfile:

# Dockerfile
```FROM alpine

RUN  apk add --update python3 wget \
     && wget --no-check-certificate https://bootstrap.pypa.io/get-pip.py \
     && apk del wget \
     && python3 get-pip.py \
     && rm get-pip.py \
     && pip3 install -U docker-py pip \
     && yes | pip uninstall pip

COPY entrypoint.py /root

ENTRYPOINT ["/root/entrypoint.py"]
```

And below is the build error that occurred when trying to build the Dockerfile:
# Build Error
```> [2/3] RUN  apk add --update python3 wget      && wget --no-check-certificate https://bootstrap.pypa.io/get-pip.py      && apk del wget      && python3 get-pip.py      && rm get-pip.py      && pip3 install -U docker-py pip      && yes | pip uninstall pip:
error: externally-managed-environment
× This environment is externally managed
╰─> 
    The system-wide python installation should be maintained using the system
    package manager (apk) only.
    
    If the package in question is not packaged already (and hence installable via
    "apk add py3-somepackage"), please consider installing it inside a virtual
    environment, e.g.:
    
    python3 -m venv /path/to/venv
    . /path/to/venv/bin/activate
    pip install mypackage
    
    To exit the virtual environment, run:
    
    deactivate
    
    The virtual environment is not deleted, and can be re-entered by re-sourcing
    the activate file.
    
    To automatically manage virtual environments, consider using pipx (from the
    pipx package).
note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.
hint: See PEP 668 for the detailed specification.
ERROR: process "/bin/sh -c apk add --update python3 wget      && wget --no-check-certificate https://bootstrap.pypa.io/get-pip.py      && apk del wget      && python3 get-pip.py      && rm get-pip.py      && pip3 install -U docker-py pip      && yes | pip uninstall pip" did not complete successfully: exit code: 1```

Your task is to repair the Dockerfile based on the Dockerfile and its build error provided. To solve the problem, first, you should diagnose which part is causing the flakiness and why. Then, according to the characteristics of that flakiness, repair the Dockerfile. the output Dockerfile must be within five angle brackets:
    <<<<<
    Dockerfile content 
    >>>>>
