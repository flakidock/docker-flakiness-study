#0 building with "default" instance using docker driver

#1 [internal] load build definition from v1_Dockerfile
#1 transferring dockerfile: 531B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/alpine:latest
#2 DONE 0.6s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [internal] load build context
#4 transferring context: 2.03MB 0.0s done
#4 DONE 0.0s

#5 [1/6] FROM docker.io/library/alpine:latest@sha256:0a4eaa0eecf5f8c050e5bba433f58c052be7587ee8af3e8b3910ef9ab5fbe9f5
#5 resolve docker.io/library/alpine:latest@sha256:0a4eaa0eecf5f8c050e5bba433f58c052be7587ee8af3e8b3910ef9ab5fbe9f5 0.0s done
#5 sha256:c6a83fedfae6ed8a4f5f7cbb6a7b6f1c1ec3d86fea8cb9e5ba2e5e6673fde9f6 0B / 3.62MB 0.1s
#5 sha256:0a4eaa0eecf5f8c050e5bba433f58c052be7587ee8af3e8b3910ef9ab5fbe9f5 1.85kB / 1.85kB done
#5 sha256:eddacbc7e24bf8799a4ed3cdcfa50d4b88a323695ad80f317b6629883b2c2a78 528B / 528B done
#5 sha256:324bc02ae1231fd9255658c128086395d3fa0aedd5a41ab6b034fd649d1a9260 1.47kB / 1.47kB done
#5 extracting sha256:c6a83fedfae6ed8a4f5f7cbb6a7b6f1c1ec3d86fea8cb9e5ba2e5e6673fde9f6
#5 sha256:c6a83fedfae6ed8a4f5f7cbb6a7b6f1c1ec3d86fea8cb9e5ba2e5e6673fde9f6 3.62MB / 3.62MB 0.1s done
#5 extracting sha256:c6a83fedfae6ed8a4f5f7cbb6a7b6f1c1ec3d86fea8cb9e5ba2e5e6673fde9f6 0.1s done
#5 DONE 0.4s

#6 [2/6] RUN 	apk add --update 		git 		py3-lxml 		py3-pip 		py3-requests 		py3-sqlalchemy 		py3-tornado 	&& pip3 install --no-cache-dir apscheduler 	&& rm -rf /var/cache/apk/*
#6 0.163 fetch https://dl-cdn.alpinelinux.org/alpine/v3.20/main/x86_64/APKINDEX.tar.gz
#6 0.283 fetch https://dl-cdn.alpinelinux.org/alpine/v3.20/community/x86_64/APKINDEX.tar.gz
#6 0.597 (1/61) Installing ca-certificates (20240705-r0)
#6 0.620 (2/61) Installing brotli-libs (1.1.0-r2)
#6 0.636 (3/61) Installing c-ares (1.28.1-r0)
#6 0.649 (4/61) Installing libunistring (1.2-r0)
#6 0.667 (5/61) Installing libidn2 (2.3.7-r0)
#6 0.679 (6/61) Installing nghttp2-libs (1.62.1-r0)
#6 0.690 (7/61) Installing libpsl (0.21.5-r1)
#6 0.699 (8/61) Installing zstd-libs (1.5.6-r0)
#6 0.714 (9/61) Installing libcurl (8.9.0-r0)
#6 0.730 (10/61) Installing libexpat (2.6.2-r0)
#6 0.740 (11/61) Installing pcre2 (10.43-r0)
#6 0.753 (12/61) Installing git (2.45.2-r0)
#6 0.839 (13/61) Installing git-init-template (2.45.2-r0)
#6 0.848 (14/61) Installing libbz2 (1.0.8-r6)
#6 0.857 (15/61) Installing libffi (3.4.6-r0)
#6 0.866 (16/61) Installing gdbm (1.23-r1)
#6 0.875 (17/61) Installing xz-libs (5.6.1-r3)
#6 0.886 (18/61) Installing libgcc (13.2.1_git20240309-r0)
#6 0.895 (19/61) Installing libstdc++ (13.2.1_git20240309-r0)
#6 0.923 (20/61) Installing mpdecimal (4.0.0-r0)
#6 0.932 (21/61) Installing ncurses-terminfo-base (6.4_p20240420-r0)
#6 0.944 (22/61) Installing libncursesw (6.4_p20240420-r0)
#6 0.955 (23/61) Installing libpanelw (6.4_p20240420-r0)
#6 0.963 (24/61) Installing readline (8.2.10-r0)
#6 0.975 (25/61) Installing sqlite-libs (3.45.3-r1)
#6 0.999 (26/61) Installing python3 (3.12.3-r1)
#6 1.228 (27/61) Installing python3-pycache-pyc0 (3.12.3-r1)
#6 1.373 (28/61) Installing pyc (3.12.3-r1)
#6 1.380 (29/61) Installing py3-lxml-pyc (5.1.0-r0)
#6 1.395 (30/61) Installing python3-pyc (3.12.3-r1)
#6 1.403 (31/61) Installing libgpg-error (1.49-r0)
#6 1.414 (32/61) Installing libgcrypt (1.10.3-r0)
#6 1.433 (33/61) Installing libxml2 (2.12.7-r0)
#6 1.453 (34/61) Installing libxslt (1.1.39-r1)
#6 1.465 (35/61) Installing py3-lxml (5.1.0-r0)
#6 1.513 (36/61) Installing py3-parsing (3.1.2-r1)
#6 1.525 (37/61) Installing py3-parsing-pyc (3.1.2-r1)
#6 1.538 (38/61) Installing py3-packaging (24.0-r1)
#6 1.548 (39/61) Installing py3-packaging-pyc (24.0-r1)
#6 1.559 (40/61) Installing py3-setuptools (69.5.1-r0)
#6 1.604 (41/61) Installing py3-setuptools-pyc (69.5.1-r0)
#6 1.659 (42/61) Installing py3-pip (24.0-r2)
#6 1.751 (43/61) Installing py3-pip-pyc (24.0-r2)
#6 1.850 (44/61) Installing py3-certifi (2024.2.2-r1)
#6 1.858 (45/61) Installing py3-certifi-pyc (2024.2.2-r1)
#6 1.867 (46/61) Installing py3-charset-normalizer (3.3.2-r1)
#6 1.880 (47/61) Installing py3-charset-normalizer-pyc (3.3.2-r1)
#6 1.891 (48/61) Installing py3-idna (3.7-r0)
#6 1.902 (49/61) Installing py3-idna-pyc (3.7-r0)
#6 1.914 (50/61) Installing py3-urllib3 (1.26.18-r1)
#6 1.929 (51/61) Installing py3-urllib3-pyc (1.26.18-r1)
#6 1.945 (52/61) Installing py3-requests (2.32.3-r0)
#6 1.957 (53/61) Installing py3-requests-pyc (2.32.3-r0)
#6 1.970 (54/61) Installing py3-greenlet (3.0.3-r1)
#6 1.988 (55/61) Installing py3-greenlet-pyc (3.0.3-r1)
#6 1.999 (56/61) Installing py3-typing-extensions (4.11.0-r1)
#6 2.008 (57/61) Installing py3-typing-extensions-pyc (4.11.0-r1)
#6 2.019 (58/61) Installing py3-sqlalchemy (2.0.29-r1)
#6 2.097 (59/61) Installing py3-sqlalchemy-pyc (2.0.29-r1)
#6 2.197 (60/61) Installing py3-tornado (6.4-r2)
#6 2.216 (61/61) Installing py3-tornado-pyc (6.4-r2)
#6 2.240 Executing busybox-1.36.1-r29.trigger
#6 2.245 Executing ca-certificates-20240705-r0.trigger
#6 2.278 OK: 118 MiB in 75 packages
#6 3.631 error: externally-managed-environment
#6 3.631 
#6 3.631 × This environment is externally managed
#6 3.631 ╰─> 
#6 3.631     The system-wide python installation should be maintained using the system
#6 3.631     package manager (apk) only.
#6 3.631     
#6 3.631     If the package in question is not packaged already (and hence installable via
#6 3.631     "apk add py3-somepackage"), please consider installing it inside a virtual
#6 3.631     environment, e.g.:
#6 3.631     
#6 3.631     python3 -m venv /path/to/venv
#6 3.631     . /path/to/venv/bin/activate
#6 3.631     pip install mypackage
#6 3.631     
#6 3.631     To exit the virtual environment, run:
#6 3.631     
#6 3.631     deactivate
#6 3.631     
#6 3.631     The virtual environment is not deleted, and can be re-entered by re-sourcing
#6 3.631     the activate file.
#6 3.631     
#6 3.631     To automatically manage virtual environments, consider using pipx (from the
#6 3.631     pipx package).
#6 3.631 
#6 3.631 note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.
#6 3.631 hint: See PEP 668 for the detailed specification.
#6 ERROR: process "/bin/sh -c apk add --update \t\tgit \t\tpy3-lxml \t\tpy3-pip \t\tpy3-requests \t\tpy3-sqlalchemy \t\tpy3-tornado \t&& pip3 install --no-cache-dir apscheduler \t&& rm -rf /var/cache/apk/*" did not complete successfully: exit code: 1
------
 > [2/6] RUN 	apk add --update 		git 		py3-lxml 		py3-pip 		py3-requests 		py3-sqlalchemy 		py3-tornado 	&& pip3 install --no-cache-dir apscheduler 	&& rm -rf /var/cache/apk/*:
3.631     deactivate
3.631     
3.631     The virtual environment is not deleted, and can be re-entered by re-sourcing
3.631     the activate file.
3.631     
3.631     To automatically manage virtual environments, consider using pipx (from the
3.631     pipx package).
3.631 
3.631 note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.
3.631 hint: See PEP 668 for the detailed specification.
------
v1_Dockerfile:7
--------------------
   6 |     
   7 | >>> RUN \
   8 | >>> 	apk add --update \
   9 | >>> 		git \
  10 | >>> 		py3-lxml \
  11 | >>> 		py3-pip \
  12 | >>> 		py3-requests \
  13 | >>> 		py3-sqlalchemy \
  14 | >>> 		py3-tornado \
  15 | >>> 	&& pip3 install --no-cache-dir apscheduler \
  16 | >>> 	&& rm -rf /var/cache/apk/*
  17 |     
--------------------
ERROR: failed to solve: process "/bin/sh -c apk add --update \t\tgit \t\tpy3-lxml \t\tpy3-pip \t\tpy3-requests \t\tpy3-sqlalchemy \t\tpy3-tornado \t&& pip3 install --no-cache-dir apscheduler \t&& rm -rf /var/cache/apk/*" did not complete successfully: exit code: 1
Duration: 0:5.69