#0 building with "default" instance using docker driver

#1 [internal] load build definition from v1_Dockerfile
#1 transferring dockerfile: 534B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/alpine:latest
#2 DONE 0.6s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [internal] load build context
#4 transferring context: 2.03MB 0.0s done
#4 DONE 0.0s

#5 [1/6] FROM docker.io/library/alpine:latest@sha256:0a4eaa0eecf5f8c050e5bba433f58c052be7587ee8af3e8b3910ef9ab5fbe9f5
#5 resolve docker.io/library/alpine:latest@sha256:0a4eaa0eecf5f8c050e5bba433f58c052be7587ee8af3e8b3910ef9ab5fbe9f5 0.0s done
#5 sha256:0a4eaa0eecf5f8c050e5bba433f58c052be7587ee8af3e8b3910ef9ab5fbe9f5 1.85kB / 1.85kB done
#5 sha256:eddacbc7e24bf8799a4ed3cdcfa50d4b88a323695ad80f317b6629883b2c2a78 528B / 528B done
#5 sha256:324bc02ae1231fd9255658c128086395d3fa0aedd5a41ab6b034fd649d1a9260 1.47kB / 1.47kB done
#5 sha256:c6a83fedfae6ed8a4f5f7cbb6a7b6f1c1ec3d86fea8cb9e5ba2e5e6673fde9f6 0B / 3.62MB 0.1s
#5 extracting sha256:c6a83fedfae6ed8a4f5f7cbb6a7b6f1c1ec3d86fea8cb9e5ba2e5e6673fde9f6
#5 sha256:c6a83fedfae6ed8a4f5f7cbb6a7b6f1c1ec3d86fea8cb9e5ba2e5e6673fde9f6 3.62MB / 3.62MB 0.2s done
#5 extracting sha256:c6a83fedfae6ed8a4f5f7cbb6a7b6f1c1ec3d86fea8cb9e5ba2e5e6673fde9f6 0.1s done
#5 DONE 0.4s

#6 [2/6] RUN 	apk add --no-cache 		git 		py3-lxml 		py3-pip 		py3-requests 		py3-sqlalchemy 		py3-tornado 	&& pip3 install --no-cache-dir apscheduler
#6 0.173 fetch https://dl-cdn.alpinelinux.org/alpine/v3.20/main/x86_64/APKINDEX.tar.gz
#6 0.287 fetch https://dl-cdn.alpinelinux.org/alpine/v3.20/community/x86_64/APKINDEX.tar.gz
#6 0.592 (1/61) Installing ca-certificates (20240705-r0)
#6 0.616 (2/61) Installing brotli-libs (1.1.0-r2)
#6 0.636 (3/61) Installing c-ares (1.28.1-r0)
#6 0.648 (4/61) Installing libunistring (1.2-r0)
#6 0.683 (5/61) Installing libidn2 (2.3.7-r0)
#6 0.697 (6/61) Installing nghttp2-libs (1.62.1-r0)
#6 0.708 (7/61) Installing libpsl (0.21.5-r1)
#6 0.719 (8/61) Installing zstd-libs (1.5.6-r0)
#6 0.741 (9/61) Installing libcurl (8.9.0-r0)
#6 0.759 (10/61) Installing libexpat (2.6.2-r0)
#6 0.771 (11/61) Installing pcre2 (10.43-r0)
#6 0.789 (12/61) Installing git (2.45.2-r0)
#6 0.878 (13/61) Installing git-init-template (2.45.2-r0)
#6 0.890 (14/61) Installing libbz2 (1.0.8-r6)
#6 0.901 (15/61) Installing libffi (3.4.6-r0)
#6 0.911 (16/61) Installing gdbm (1.23-r1)
#6 0.922 (17/61) Installing xz-libs (5.6.1-r3)
#6 0.935 (18/61) Installing libgcc (13.2.1_git20240309-r0)
#6 0.947 (19/61) Installing libstdc++ (13.2.1_git20240309-r0)
#6 0.977 (20/61) Installing mpdecimal (4.0.0-r0)
#6 0.990 (21/61) Installing ncurses-terminfo-base (6.4_p20240420-r0)
#6 1.005 (22/61) Installing libncursesw (6.4_p20240420-r0)
#6 1.025 (23/61) Installing libpanelw (6.4_p20240420-r0)
#6 1.036 (24/61) Installing readline (8.2.10-r0)
#6 1.050 (25/61) Installing sqlite-libs (3.45.3-r1)
#6 1.076 (26/61) Installing python3 (3.12.3-r1)
#6 1.311 (27/61) Installing python3-pycache-pyc0 (3.12.3-r1)
#6 1.461 (28/61) Installing pyc (3.12.3-r1)
#6 1.471 (29/61) Installing py3-lxml-pyc (5.1.0-r0)
#6 1.488 (30/61) Installing python3-pyc (3.12.3-r1)
#6 1.499 (31/61) Installing libgpg-error (1.49-r0)
#6 1.510 (32/61) Installing libgcrypt (1.10.3-r0)
#6 1.533 (33/61) Installing libxml2 (2.12.7-r0)
#6 1.554 (34/61) Installing libxslt (1.1.39-r1)
#6 1.569 (35/61) Installing py3-lxml (5.1.0-r0)
#6 1.620 (36/61) Installing py3-parsing (3.1.2-r1)
#6 1.633 (37/61) Installing py3-parsing-pyc (3.1.2-r1)
#6 1.650 (38/61) Installing py3-packaging (24.0-r1)
#6 1.662 (39/61) Installing py3-packaging-pyc (24.0-r1)
#6 1.674 (40/61) Installing py3-setuptools (69.5.1-r0)
#6 1.724 (41/61) Installing py3-setuptools-pyc (69.5.1-r0)
#6 1.786 (42/61) Installing py3-pip (24.0-r2)
#6 1.887 (43/61) Installing py3-pip-pyc (24.0-r2)
#6 1.996 (44/61) Installing py3-certifi (2024.2.2-r1)
#6 2.025 (45/61) Installing py3-certifi-pyc (2024.2.2-r1)
#6 2.035 (46/61) Installing py3-charset-normalizer (3.3.2-r1)
#6 2.049 (47/61) Installing py3-charset-normalizer-pyc (3.3.2-r1)
#6 2.063 (48/61) Installing py3-idna (3.7-r0)
#6 2.077 (49/61) Installing py3-idna-pyc (3.7-r0)
#6 2.092 (50/61) Installing py3-urllib3 (1.26.18-r1)
#6 2.108 (51/61) Installing py3-urllib3-pyc (1.26.18-r1)
#6 2.127 (52/61) Installing py3-requests (2.32.3-r0)
#6 2.141 (53/61) Installing py3-requests-pyc (2.32.3-r0)
#6 2.155 (54/61) Installing py3-greenlet (3.0.3-r1)
#6 2.173 (55/61) Installing py3-greenlet-pyc (3.0.3-r1)
#6 2.324 (56/61) Installing py3-typing-extensions (4.11.0-r1)
#6 2.338 (57/61) Installing py3-typing-extensions-pyc (4.11.0-r1)
#6 2.350 (58/61) Installing py3-sqlalchemy (2.0.29-r1)
#6 2.796 (59/61) Installing py3-sqlalchemy-pyc (2.0.29-r1)
#6 3.699 (60/61) Installing py3-tornado (6.4-r2)
#6 3.722 (61/61) Installing py3-tornado-pyc (6.4-r2)
#6 3.749 Executing busybox-1.36.1-r29.trigger
#6 3.754 Executing ca-certificates-20240705-r0.trigger
#6 3.784 OK: 118 MiB in 75 packages
#6 5.189 error: externally-managed-environment
#6 5.189 
#6 5.189 × This environment is externally managed
#6 5.189 ╰─> 
#6 5.189     The system-wide python installation should be maintained using the system
#6 5.189     package manager (apk) only.
#6 5.189     
#6 5.189     If the package in question is not packaged already (and hence installable via
#6 5.189     "apk add py3-somepackage"), please consider installing it inside a virtual
#6 5.189     environment, e.g.:
#6 5.189     
#6 5.189     python3 -m venv /path/to/venv
#6 5.189     . /path/to/venv/bin/activate
#6 5.189     pip install mypackage
#6 5.189     
#6 5.189     To exit the virtual environment, run:
#6 5.189     
#6 5.189     deactivate
#6 5.189     
#6 5.189     The virtual environment is not deleted, and can be re-entered by re-sourcing
#6 5.189     the activate file.
#6 5.189     
#6 5.189     To automatically manage virtual environments, consider using pipx (from the
#6 5.189     pipx package).
#6 5.189 
#6 5.189 note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.
#6 5.189 hint: See PEP 668 for the detailed specification.
#6 ERROR: process "/bin/sh -c apk add --no-cache \t\tgit \t\tpy3-lxml \t\tpy3-pip \t\tpy3-requests \t\tpy3-sqlalchemy \t\tpy3-tornado \t&& pip3 install --no-cache-dir apscheduler" did not complete successfully: exit code: 1
------
 > [2/6] RUN 	apk add --no-cache 		git 		py3-lxml 		py3-pip 		py3-requests 		py3-sqlalchemy 		py3-tornado 	&& pip3 install --no-cache-dir apscheduler:
5.189     deactivate
5.189     
5.189     The virtual environment is not deleted, and can be re-entered by re-sourcing
5.189     the activate file.
5.189     
5.189     To automatically manage virtual environments, consider using pipx (from the
5.189     pipx package).
5.189 
5.189 note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.
5.189 hint: See PEP 668 for the detailed specification.
------
v1_Dockerfile:8
--------------------
   7 |     
   8 | >>> RUN \
   9 | >>> 	apk add --no-cache \
  10 | >>> 		git \
  11 | >>> 		py3-lxml \
  12 | >>> 		py3-pip \
  13 | >>> 		py3-requests \
  14 | >>> 		py3-sqlalchemy \
  15 | >>> 		py3-tornado \
  16 | >>> 	&& pip3 install --no-cache-dir apscheduler
  17 |     
--------------------
ERROR: failed to solve: process "/bin/sh -c apk add --no-cache \t\tgit \t\tpy3-lxml \t\tpy3-pip \t\tpy3-requests \t\tpy3-sqlalchemy \t\tpy3-tornado \t&& pip3 install --no-cache-dir apscheduler" did not complete successfully: exit code: 1
Duration: 0:7.39